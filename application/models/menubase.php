<? 
/* *******************************************************************************************************
MODUL NAME 			: SIMWEB
FILE NAME 			: MenuBase.php
AUTHOR				: MRF
VERSION				: 1.0
MODIFICATION DOC	:
DESCRIPTION			: Entity-base class for tabel Menu implementation
***************************************************************************************************** */

  /***
  * Entity-base class untuk mengimplementasikan tabel Menu.
  * 
  * @author M Reza Faisal
  * @generated by Entity Generator 5.8.3
  * @generated on 20-Apr-2005,20:28
  ***/
  // include_once('Entity.php');
  include_once(APPPATH.'/models/Entity.php');

  class MenuBase extends Entity{ 

	 var $query;
  	var $id;
    /**
    * Class constructor.
    * @author M Reza Faisal
    **/
    function MenuBase(){
      $this->Entity(); 
    }

    /**
    * Cek apakah operasi insert dapat dilakukan atau tidak 
    * @author M Reza Faisal
    * @return boolean True jika insert boleh dilakukan, false jika tidak.
    **/
    function canInsert(){
      return true;
    }

    /**
    * Insert record ke database. 
    * @author M Reza Faisal
    * @return boolean True jika insert sukses, false jika tidak.
    **/
    function insert(){
      if(!$this->canInsert())
        showMessageDlg("Data Menu tidak dapat di-insert",true);
      else{  				
        $str = "INSERT INTO website.menu 
                (MENU_ID,MENU_PARENT_ID,NAMA_MENU,CAPTION,URUT_MENU,KET_MENU,LINK,TARGET,STATUS_AKTIF, USER_LOGIN_ID, USER_LOGIN_PEGAWAI_ID) 
                VALUES(
                  '".$this->getField("MENU_ID")."',
                  '".$this->getField("MENU_PARENT_ID")."',
                  '".$this->getField("NAMA_MENU")."',
                  '".$this->getField("CAPTION")."',
                  ".$this->getField("URUT_MENU").",
                  '".$this->getField("KET_MENU")."',
                  '".$this->getField("LINK")."',
                  '".$this->getField("TARGET")."',
				          '".$this->getField("STATUS_AKTIF")."',
                  '".$this->getField("USER_LOGIN_ID")."',
                  ".$this->getField("USER_LOGIN_PEGAWAI_ID")."
                )"; 
		$this->query = $str;
        return $this->execQuery($str);
      }
    }

    /**
    * Cek apakah operasi update dapat dilakukan atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika update dapat dilakukan, false jika tidak.
    **/
    function canUpdate(){
      return true;
    }

    /**
    * Update record. 
    * @author M Reza Faisal
    * @return boolean True jika update sukses, false jika tidak.
    **/
    function update(){
      if(!$this->canUpdate())
        showMessageDlg("Data Menu tidak dapat diupdate",true);
      else{
        $str = "UPDATE website.menu 
                SET 
                  MENU_PARENT_ID = '".$this->getField("MENU_PARENT_ID")."',
                  NAMA_MENU = '".$this->getField("NAMA_MENU")."',
                  CAPTION = '".$this->getField("CAPTION")."',
                  URUT_MENU = ".$this->getField("URUT_MENU").",
                  KET_MENU = '".$this->getField("KET_MENU")."',
                  LINK = '".$this->getField("LINK")."',
                  LINK = '".$this->getField("LINK")."',
                  LINK = '".$this->getField("LINK")."',
                  USER_LOGIN_ID = '".$this->getField("USER_LOGIN_ID")."',
                  USER_LOGIN_PEGAWAI_ID = ".$this->getField("USER_LOGIN_PEGAWAI_ID").",
                  TARGET = '".$this->getField("TARGET")."'
                WHERE 
                  MENU_ID = '".$this->getField("MENU_ID")."'"; 
		$this->query = $str;
        return $this->execQuery($str);
      }
    }

    /**
    * Cek apakah record dapat dihapus atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika record dapat dihapus, false jika tidak.
    **/
    function canDelete(){
      return true;
    }

    /**
    * Menghapus record sesuai id-nya. 
    * @author M Reza Faisal
    * @return boolean True jika penghapusan sukses, false jika tidak.
    **/
    function delete(){
      if(!$this->canDelete())
        showMessageDlg("Data Menu tidak dapat di-hapus",true);
      else{
        $str = "DELETE FROM website.menu 
                WHERE 
                  MENU_ID = '".$this->getField("MENU_ID")."'"; 
				  
		$this->query = $str;
        return $this->execQuery($str);
      }
    }

    /**
    * Cari record berdasarkan id-nya. 
    * @author M Reza Faisal
    * @param string MENU_ID Id record 
    * @return boolean True jika pencarian sukses, false jika tidak.
    **/
    function selectById($MENU_ID){
      $str = "SELECT * FROM website.menu
              WHERE 
                MENU_ID = '".$MENU_ID."'"; 
      return $this->select($str);
    }

    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 
    function selectByParams($paramsArray=array(),$limit=20000,$from=0, $statement=""){
      $str = "SELECT 
			A.MENU_ID,  MENU_PARENT_ID, 
			   NAMA_MENU, CAPTION, URUT_MENU, 
			   KET_MENU, LINK, TARGET, 
			   STATUS_AKTIF, (SELECT COUNT(1) FROM website.menu X WHERE X.MENU_PARENT_ID = A.MENU_ID) JUMLAH
			FROM website.menu A WHERE 1 = 1 ".$statement; 
      foreach ($paramsArray as $key => $val){
        $str .= " AND $key = '$val' ";
      }
      $str .= " ORDER BY URUT_MENU_WEB ASC, A.MENU_ID ASC ";
	  //echo $str;exit;
	  $this->query = $str;
	
      return $this->selectLimit($str,$limit,$from); 
    }
	
	/*function selectByParamsBak($paramsArray=array(),$limit=20000,$from=0, $statement=""){
      $str = "SELECT 
			A.MENU_ID,  MENU_PARENT_ID, 
			   NAMA_MENU, CAPTION, URUT_MENU, 
			   KET_MENU, LINK, TARGET, 
			   STATUS_AKTIF, (SELECT COUNT(1) FROM website.menu X WHERE X.MENU_PARENT_ID = A.MENU_ID) JUMLAH
			FROM website.menu A LEFT JOIN USER_GROUP_MENU B ON A.MENU_ID = B.MENU_ID  WHERE 1 = 1 ".$statement; 
      foreach ($paramsArray as $key => $val){
        $str .= " AND $key = '$val' ";
      }
      $str .= " ORDER BY URUT_MENU_WEB ASC, A.MENU_ID ASC ";
	  //echo $str;exit;
	  $this->query = $str;
	
      return $this->selectLimit($str,$limit,$from); 
    }*/

    function selectByParamsWebUtama($paramsArray=array(),$limit=20000,$from=0, $stat=""){
      $str = "SELECT 
				MENU_ID, MENU_PARENT_ID, 
				   NAMA_MENU, NAMA_MENU_EN, 
				   LINK_WEB, STATUS_AKTIF_WEB, (SELECT COUNT(1) FROM website.menu X WHERE X.MENU_PARENT_ID = A.MENU_ID) SUB
				FROM website.menu A WHERE STATUS_AKTIF_WEB = 1 ".$stat; 
      foreach ($paramsArray as $key => $val){
        $str .= " AND $key = '$val' ";
      }
      $str .= " ORDER BY URUT_MENU_WEB ASC, MENU_ID ASC ";
	  //echo $str;exit;
	  $this->query = $str;
      return $this->selectLimit($str,$limit,$from); 
    }
	
    function selectByParamsUserGroup($paramsArray=array(),$limit=20000,$from=0, $id=""){
      $str = "SELECT 
			A.MENU_ID,  MENU_PARENT_ID, 
			   NAMA_MENU, CAPTION, URUT_MENU, 
			   KET_MENU, LINK, TARGET, 
			   STATUS_AKTIF, B.MENU_ID MENU_ID_GROUP
			FROM website.menu A LEFT JOIN USER_GROUP_MENU B ON A.MENU_ID = B.MENU_ID AND USER_GROUP_ID = '".$id."' "; 
      foreach ($paramsArray as $key => $val){
        $str .= " AND $key = '$val' ";
      }
      $str .= " ORDER BY  A.MENU_ID ASC";
	  $this->query = $str;
      return $this->selectLimit($str,$limit,$from); 
    }
	
    /** 
    * Hitung jumlah record berdasarkan parameter (array). 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @return long Jumlah record yang sesuai kriteria 
    **/ 

    function getLinkHeader($paramsArray=array()){
      $str = "SELECT LINK_HEADER FROM website.menu WHERE MENU_ID IS NOT NULL "; 
      foreach ($paramsArray as $key => $val){
        $str .= " AND $key = '$val' ";
      }
      $this->select($str); 
      if($this->firstRow()) 
        return $this->getField("LINK_HEADER"); 
      else 
         return 0; 
    }
	
    function getCountByParams($paramsArray=array()){
      $str = "SELECT COUNT(MENU_ID) AS ROWCOUNT FROM website.menu WHERE MENU_ID IS NOT NULL "; 
      foreach ($paramsArray as $key => $val){
        $str .= " AND $key = '$val' ";
      }
      $this->select($str); 
      if($this->firstRow()) 
        return $this->getField("ROWCOUNT"); 
      else 
         return 0; 
    }
  } 
?>
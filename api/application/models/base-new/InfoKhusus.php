<? 
/* *******************************************************************************************************
MODUL NAME 			: E LEARNING
FILE NAME 			: 
AUTHOR				: 
VERSION				: 1.0
MODIFICATION DOC	:
DESCRIPTION			: 
***************************************************************************************************** */

  /***
  * Entity-base class untuk mengimplementasikan tabel KontakPegawai.
  * 
  ***/
  include_once(APPPATH.'/models/Entity.php');
  
  class InfoKhusus extends Entity{ 

	var $query;
    /**
    * Class constructor.
    **/
    function InfoKhusus()
	{
      $this->Entity(); 
    }

    function selectByParamsDispen($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.ESELON_ID ASC, A.PANGKAT_ID DESC, A.TMT_PANGKAT ASC')
	{
		$str = "
		SELECT
			AMBIL_SATKER_ID_INDUK (A.SATUAN_KERJA_ID) ID_SATKER_INDUK, AMBIL_SATKER_NAMA(AMBIL_SATKER_ID_INDUK(A.SATUAN_KERJA_ID)) SATUAN_KERJA_INDUK
			, A.SATUAN_KERJA_ID ID_SATUAN_KERJA_ANAK, AMBIL_SATKER_NAMA(A.SATUAN_KERJA_ID) SATUAN_KERJA_ANAK
			, A.*
		FROM
		(
			SELECT
			A.PEGAWAI_ID ID, A.SATUAN_KERJA_ID, JAB_RIW.ESELON_ID, PANG_RIW.PANGKAT_ID, PANG_RIW.TMT_PANGKAT
			, A.NIP_BARU, A.NIP_LAMA, A.NAMA NAMA_LENGKAP, A.JENIS_KELAMIN, AG.NAMA AGAMA, A.TEMPAT_LAHIR, A.TANGGAL_LAHIR
			, ISTR.STATUS_S_I ID_STATUS_NIKAH, ISTR.JENIS_KAWIN_NAMA STATUS_NIKAH, A.ALAMAT, A.RT ALAMAT_RT, A.RW ALAMAT_RW, PROP.NAMA PROPINSI, KAB.NAMA KABUPATEN, KEC.NAMA KECAMATAN, KEL.NAMA DESA
			, CPNS.TMT_CPNS TMT_CPNS, A.STATUS_PEGAWAI_ID, PEGAWAI_STATUS_NAMA STATUS_PEGAWAI
			, GJ_RIW.MASA_KERJA_GAJI_BULAN, GJ_RIW.MASA_KERJA_GAJI_TAHUN
			, COALESCE(JAB_RIW.JENIS_PEGAWAI_ID, PPPK_RIW.JENIS_FORMASI_TUGAS_ID) JENIS_PEGAWAI_ID
			, COALESCE(JAB_RIW.JENIS_JABATAN, PPPK_RIW.PPPK_TIPE_PEGAWAI) JENIS_JABATAN
			, CASE WHEN ESELON_ID = 99 THEN NULL ELSE JAB_RIW.TMT_JABATAN END TMT_ESELON
			, COALESCE(JAB_RIW.TMT_JABATAN, PPPK_RIW.TMT_PPPK) TMT_SK_JABATAN
			, COALESCE(JAB_RIW.TANGGAL_SK_JABATAN, PPPK_RIW.TANGGAL_SK_JABATAN) TANGGAL_SK_JABATAN
			, COALESCE(JAB_RIW.PEJABAT_PENETAP_JABATAN, PPPK_RIW.PEJABAT_PENETAP_JABATAN) PEJABAT_PENETAP_JABATAN
			, COALESCE(JAB_RIW.JABATAN_NAMA, PPPK_RIW.JABATAN_TUGAS) NAMA_JABATAN
			, JAB_RIW.ESELON_NAMA
			, PANG_RIW.TANGGAL_SK TANGGAL_SK_PANGKAT, PANG_RIW.TMT_PANGKAT TMT_SK_PANGKAT, PANG_RIW.PEJABAT_PENETAP_PANGKAT, PANG_RIW.PANGKAT_ID GOLONGAN_ID, PANG_RIW.KODE GOLONGAN, PANG_RIW.NAMA PANGKAT
			, PEND_RIW.JURUSAN NAMA_JURUSAN, PEND_RIW.NAMA NAMA_LEMBAGA, PEND_RIW.PENDIDIKAN_NAMA TINGKAT_PENDIDIKAN
			, PAK_RIW.TANGGAL_SK PAK_TANGGAL_SK, PAK_RIW.KREDIT_UTAMA PAK_KREDIT_UTAMA, PAK_RIW.KREDIT_PENUNJANG PAK_KREDIT_PENUNJANG
			FROM PEGAWAI A
			LEFT JOIN SK_CPNS CPNS ON CPNS.PEGAWAI_ID = A.PEGAWAI_ID
			LEFT JOIN
			(
				SELECT
					A.SK_PPPK_ID, B.KODE, A.TMT_PPPK, A.GOLONGAN_PPPK_ID
					, A.PEJABAT_PENETAP PEJABAT_PENETAP_JABATAN, A.TANGGAL_SK TANGGAL_SK_JABATAN
					, A.JENIS_FORMASI_TUGAS_ID--, TP.NAMA JENIS_JABATAN
					, A.JABATAN_TUGAS, PPPK_TIPE_PEGAWAI, BUP PPPK_BUP
				FROM SK_PPPK A
				LEFT JOIN GOLONGAN_PPPK B ON A.GOLONGAN_PPPK_ID = B.GOLONGAN_PPPK_ID
				--LEFT JOIN TIPE_PEGAWAI TP ON A.JENIS_FORMASI_TUGAS_ID = TP.TIPE_PEGAWAI_ID
				LEFT JOIN
				(
					SELECT
					A.*
					, CASE JENIS_JABATAN_FT_PPPK_ID
					WHEN '1' THEN 'Pendidikan'
					WHEN '2' then 'Kesehatan'
					WHEN '3' then 'Lainnya'
					ELSE '' END PPPK_TIPE_PEGAWAI
					from JABATAN_FT_PPPK A
				) JJ ON A.JABATAN_FT_ID = JJ.JABATAN_FT_PPPK_ID
			) PPPK_RIW ON A.SK_PPPK_ID = PPPK_RIW.SK_PPPK_ID
			LEFT JOIN PAK PAK_RIW ON A.PAK_ID = PAK_RIW.PAK_ID
			LEFT JOIN
			(
				SELECT
				A.PANGKAT_RIWAYAT_ID, B.KODE, B.NAMA, A.TMT_PANGKAT, A.TANGGAL_SK, A.PANGKAT_ID
				, A.PEJABAT_PENETAP PEJABAT_PENETAP_PANGKAT
				FROM PANGKAT_RIWAYAT A
				LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
			) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
			LEFT JOIN
			(
				SELECT A.GAJI_RIWAYAT_ID, B.KODE, A.TMT_SK, A.PANGKAT_ID
				, A.MASA_KERJA_BULAN MASA_KERJA_GAJI_BULAN, A.MASA_KERJA_TAHUN MASA_KERJA_GAJI_TAHUN
				FROM GAJI_RIWAYAT A
				LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
			) GJ_RIW ON A.GAJI_RIWAYAT_ID = GJ_RIW.GAJI_RIWAYAT_ID
			LEFT JOIN
			(
				SELECT
				A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN
				, A.NAMA JABATAN_NAMA, A.TANGGAL_SK TANGGAL_SK_JABATAN, A.PEJABAT_PENETAP PEJABAT_PENETAP_JABATAN
				, A.TIPE_PEGAWAI_ID JENIS_PEGAWAI_ID, TP.NAMA JENIS_JABATAN
				FROM JABATAN_RIWAYAT A
				LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
				LEFT JOIN TIPE_PEGAWAI TP ON A.TIPE_PEGAWAI_ID = TP.TIPE_PEGAWAI_ID
			) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
			LEFT JOIN PENDIDIKAN_RIWAYAT_DATA PEND_RIW ON A.PENDIDIKAN_RIWAYAT_ID = PEND_RIW.PENDIDIKAN_RIWAYAT_ID
			LEFT JOIN
			(
				SELECT 	
					A.*
					, CASE A.STATUS_PNS WHEN 1 THEN 'PNS' ELSE 'Non PNS' END STATUS_PNS_NAMA
					, B.NAMA JENIS_KAWIN_NAMA
				FROM SUAMI_ISTRI A
				LEFT JOIN sapk.jenis_kawin B ON A.STATUS_S_I::INTEGER = B.ID
				INNER JOIN
				(
					SELECT
					A.PEGAWAI_ID, MAX(TANGGAL_KAWIN) TANGGAL_KAWIN
					FROM SUAMI_ISTRI A
					WHERE 1 = 1 AND (COALESCE(NULLIF(A.STATUS, ''), NULL) IS NULL OR A.STATUS = '2')
					GROUP BY A.PEGAWAI_ID
				) M ON A.PEGAWAI_ID = M.PEGAWAI_ID AND A.TANGGAL_KAWIN = M.TANGGAL_KAWIN
				WHERE 1 = 1 AND (COALESCE(NULLIF(A.STATUS, ''), NULL) IS NULL OR A.STATUS = '2')
			) ISTR ON A.PEGAWAI_ID = ISTR.PEGAWAI_ID
			--LEFT JOIN SATUAN_KERJA SK ON SK.SATUAN_KERJA_ID = A.SATUAN_KERJA_ID
			--LEFT JOIN (SELECT PEGAWAI_ID, TANGGAL_MULAI, TANGGAL_AKHIR FROM HUKUMAN_TERAKHIR X) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
			LEFT JOIN AGAMA AG ON A.AGAMA_ID = AG.AGAMA_ID
			LEFT JOIN (SELECT PROPINSI_ID, NAMA FROM PROPINSI) PROP ON PROP.PROPINSI_ID = A.PROPINSI_ID
			LEFT JOIN (SELECT PROPINSI_ID, KABUPATEN_ID, NAMA FROM KABUPATEN) KAB ON KAB.PROPINSI_ID = A.PROPINSI_ID AND KAB.KABUPATEN_ID = A.KABUPATEN_ID
			LEFT JOIN (SELECT PROPINSI_ID, KABUPATEN_ID, KECAMATAN_ID, NAMA FROM KECAMATAN) KEC ON KEC.PROPINSI_ID = A.PROPINSI_ID AND KEC.KABUPATEN_ID = A.KABUPATEN_ID AND KEC.KECAMATAN_ID = A.KECAMATAN_ID
			LEFT JOIN (SELECT PROPINSI_ID, KABUPATEN_ID, KECAMATAN_ID, KELURAHAN_ID, NAMA FROM KELURAHAN) KEL ON KEL.PROPINSI_ID = A.PROPINSI_ID AND KEL.KABUPATEN_ID = A.KABUPATEN_ID AND KEL.KECAMATAN_ID = A.KECAMATAN_ID AND KEL.KELURAHAN_ID = A.DESA_ID
			LEFT JOIN
			(
				SELECT A.PEGAWAI_STATUS_ID, A.PEGAWAI_ID, A.STATUS_PEGAWAI_ID, B.NAMA PEGAWAI_STATUS_NAMA
				, A.TMT PEGAWAI_KEDUDUKAN_TMT, C.NAMA PEGAWAI_KEDUDUKAN_NAMA
				FROM PEGAWAI_STATUS A
				INNER JOIN STATUS_PEGAWAI B ON A.STATUS_PEGAWAI_ID = B.STATUS_PEGAWAI_ID
				INNER JOIN STATUS_PEGAWAI_KEDUDUKAN C ON A.STATUS_PEGAWAI_KEDUDUKAN_ID = C.STATUS_PEGAWAI_KEDUDUKAN_ID
			) PS ON A.PEGAWAI_STATUS_ID = PS.PEGAWAI_STATUS_ID
			WHERE 1 = 1
		"; 
		
		while(list($key,$val) = each($paramsArray))
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." 
		) A
		WHERE 1=1 ".$order;
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
    }

    function selectByParamsSatker($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order='')
    {
    	$str = "
    	SELECT
    	A.SATUAN_KERJA_ID ID, A.SATUAN_KERJA_PARENT_ID ID_PARENT, A.NAMA, A.NAMA_JABATAN
    	, A.ESELON_ID, B.NAMA ESELON, A.SATUAN_KERJA_INDUK
    	, A.MASA_BERLAKU_AWAL, A.MASA_BERLAKU_AKHIR
    	, CASE WHEN COALESCE(MASA_BERLAKU_AKHIR, NOW()) >= NOW() THEN 'Aktif' ELSE 'Tidak Aktif' END STATUS_NAMA
    	FROM SATUAN_KERJA A
    	LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
    	WHERE 1=1
    	"; 
    	
    	foreach ($paramsArray as $key => $val)
    	{
    		$str .= " AND $key = '$val' ";
    	}
    	
    	$str .= $statement." ".$order;
    	$this->query = $str;
    	return $this->selectLimit($str,$limit,$from); 
    	
    }

  } 
?>
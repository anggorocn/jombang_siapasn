<? 
/* *******************************************************************************************************
MODUL NAME 			: MTSN LAWANG
FILE NAME 			: 
AUTHOR				: 
VERSION				: 1.0
MODIFICATION DOC	:
DESCRIPTION			: 
***************************************************************************************************** */

  /***
  * Entity-base class untuk mengimplementasikan tabel kategori.
  * 
  ***/
  // include_once('Entity.php');
  include_once(APPPATH.'/models/Entity.php');
  
  class Pegawai extends Entity{ 

	 var $query;
  	var $id;
    /**
    * Class constructor.
    **/
    function Pegawai()
	{
      $this->Entity(); 
    }

	function insert()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$this->setField("PEGAWAI_ID", $this->getNextId("PEGAWAI_ID","PEGAWAI")); 

     	$str = "
			INSERT INTO PEGAWAI (
				PEGAWAI_ID, SATUAN_KERJA_ID, NIP_LAMA, NIP_BARU, NAMA, TEMPAT_LAHIR, TANGGAL_LAHIR, 
				JENIS_KELAMIN, KEDUDUKAN, SUKU_BANGSA, GOLONGAN_DARAH, ALAMAT, RT, RW, KODEPOS, TELEPON, HP, 
				TELEPON_KANTOR, FACEBOOK, TWITTER, WHATSAPP, TELEGRAM, KARTU_PEGAWAI, ASKES, TASPEN, NPWP, NIK, NO_REKENING, 
				SK_KONVERSI_NIP, NO_URUT, NO_KK, NO_RAK_BERKAS, 
				BANK_ID, AGAMA_ID, PROPINSI_ID, KABUPATEN_ID, KECAMATAN_ID, DESA_ID, KETERANGAN_1, KETERANGAN_2
				, JENIS_PEGAWAI_ID, BPJS, BPJS_TANGGAL, NPWP_TANGGAL, ALAMAT_KETERANGAN
				, EMAIL_KANTOR, REKENING_NAMA, GAJI_POKOK, TUNJANGAN, TUNJANGAN_KELUARGA
				, GAJI_BERSIH, STATUS_MUTASI, TMT_MUTASI, INSTANSI_SEBELUM
				, LAST_USER, LAST_DATE, LAST_LEVEL, USER_LOGIN_ID, USER_LOGIN_PEGAWAI_ID
				) 

			VALUES (
				 ".$this->getField("PEGAWAI_ID").",
				 ".$this->getField("SATUAN_KERJA_ID").",
				 '".$this->getField("NIP_LAMA")."',
				 '".$this->getField("NIP_BARU")."',
				 '".$this->getField("NAMA")."',
				 '".$this->getField("TEMPAT_LAHIR")."',
				 ".$this->getField("TANGGAL_LAHIR").",
				 '".$this->getField("JENIS_KELAMIN")."',
				 '".$this->getField("KEDUDUKAN")."',
				 '".$this->getField("SUKU_BANGSA")."',
				 '".$this->getField("GOLONGAN_DARAH")."',
				 '".$this->getField("ALAMAT")."',
				 '".$this->getField("RT")."',
				 '".$this->getField("RW")."',
				 '".$this->getField("KODEPOS")."',
				 '".$this->getField("TELEPON")."',
				 '".$this->getField("HP")."',
				 '".$this->getField("TELEPON_KANTOR")."',
				 '".$this->getField("FACEBOOK")."',
				 '".$this->getField("TWITTER")."',
				 '".$this->getField("WHATSAPP")."',
				 '".$this->getField("TELEGRAM")."',
				 '".$this->getField("KARTU_PEGAWAI")."',
			     '".$this->getField("ASKES")."',
			     '".$this->getField("TASPEN")."',
			     '".$this->getField("NPWP")."',
			     '".$this->getField("NIK")."',
			     '".$this->getField("NO_REKENING")."',
			     '".$this->getField("SK_KONVERSI_NIP")."',
			     '".$this->getField("NO_URUT")."',
			     '".$this->getField("NO_KK")."',
			     '".$this->getField("NO_RAK_BERKAS")."',
				 ".$this->getField("BANK_ID").",
				 ".$this->getField("AGAMA_ID").",
				 ".$this->getField("PROPINSI_ID").",
				 ".$this->getField("KABUPATEN_ID").",
				 ".$this->getField("KECAMATAN_ID").",
				 ".$this->getField("DESA_ID").",
				 '".$this->getField("KETERANGAN_1")."',
				 '".$this->getField("KETERANGAN_2")."',
				 ".$this->getField("JENIS_PEGAWAI_ID").",
				 '".$this->getField("BPJS")."',
				 ".$this->getField("BPJS_TANGGAL").",
				 ".$this->getField("NPWP_TANGGAL").",
				 '".$this->getField("ALAMAT_KETERANGAN")."',
				 '".$this->getField("EMAIL_KANTOR")."',
				 '".$this->getField("REKENING_NAMA")."',
				 ".$this->getField("GAJI_POKOK").",
				 ".$this->getField("TUNJANGAN").",
				 ".$this->getField("TUNJANGAN_KELUARGA").",
				 ".$this->getField("GAJI_BERSIH").",
				 ".$this->getField("STATUS_MUTASI").",
				 ".$this->getField("TMT_MUTASI").",
				 '".$this->getField("INSTANSI_SEBELUM")."',
				 '".$this->getField("LAST_USER")."',
				 ".$this->getField("LAST_DATE").",
				 ".$this->getField("LAST_LEVEL").",
				 ".$this->getField("USER_LOGIN_ID").",
				 ".$this->getField("USER_LOGIN_PEGAWAI_ID")."
			)
		"; 	
		$this->id = $this->getField("PEGAWAI_ID");
		$this->query = $str;
		// echo $str;exit;
		return $this->execQuery($str);
    }

	
	function insertBak()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$this->setField("PEGAWAI_ID", $this->getNextId("PEGAWAI_ID","PEGAWAI")); 

     	$str = "
			INSERT INTO PEGAWAI (
				PEGAWAI_ID, STATUS, SATUAN_KERJA_ID, JABATAN_RIWAYAT_ID, PEGAWAI_STATUS_ID, PENDIDIKAN_RIWAYAT_ID, 
				GAJI_RIWAYAT_ID, PANGKAT_RIWAYAT_ID, JENIS_PEGAWAI_ID, TIPE_PEGAWAI_ID, STATUS_PEGAWAI_ID, NIP_LAMA, NIP_BARU, 
				NAMA, GELAR_DEPAN, GELAR_BELAKANG, TEMPAT_LAHIR, TANGGAL_LAHIR, JENIS_KELAMIN, STATUS_KAWIN, SUKU_BANGSA,
				GOLONGAN_DARAH, EMAIL, ALAMAT, RT, RW, KODEPOS, TELEPON, HP, KARTU_PEGAWAI, ASKES, TASPEN, NPWP, NIK, NO_REKENING,
				SK_KONVERSI_NIP, BANK_ID, AGAMA_ID
			) 
			VALUES (
				  ".$this->getField("PEGAWAI_ID").",
			     '".$this->getField("STATUS")."',
			      ".$this->getField("SATUAN_KERJA_ID")."',
			      ".$this->getField("JABATAN_RIWAYAT_ID").",
			      ".$this->getField("PEGAWAI_STATUS_ID").",
			      ".$this->getField("PENDIDIKAN_RIWAYAT_ID").",
			      ".$this->getField("GAJI_RIWAYAT_ID").",
			      ".$this->getField("PANGKAT_RIWAYAT_ID").",
			      ".$this->getField("JENIS_PEGAWAI_ID").",
			     '".$this->getField("TIPE_PEGAWAI_ID")."',
			      ".$this->getField("STATUS_PEGAWAI_ID").",
			     '".$this->getField("NIP_LAMA")."',
			     '".$this->getField("NIP_BARU")."',
			     '".$this->getField("NAMA")."',
			     '".$this->getField("GELAR_DEPAN")."',
			     '".$this->getField("GELAR_BELAKANG")."',
			     '".$this->getField("TEMPAT_LAHIR")."',
			      ".$this->getField("TANGGAL_LAHIR").",
			     '".$this->getField("JENIS_KELAMIN")."',
			      ".$this->getField("STATUS_KAWIN").",
			     '".$this->getField("SUKU_BANGSA")."',
			     '".$this->getField("GOLONGAN_DARAH")."',
			     '".$this->getField("EMAIL")."',
			     '".$this->getField("ALAMAT")."',
			     '".$this->getField("RT")."',
			     '".$this->getField("RW")."',
			     '".$this->getField("KODEPOS")."',
			     '".$this->getField("TELEPON")."',
			     '".$this->getField("HP")."',
			     '".$this->getField("KARTU_PEGAWAI")."',
			     '".$this->getField("ASKES")."',
			     '".$this->getField("TASPEN")."',
			     '".$this->getField("NPWP")."',
			     '".$this->getField("NIK")."',
			     '".$this->getField("NO_REKENING")."',
			     '".$this->getField("SK_KONVERSI_NIP")."',
			      ".$this->getField("BANK_ID").",
			      ".$this->getField("AGAMA_ID")."
			)
		"; 	
		$this->id = $this->getField("PEGAWAI_ID");
		$this->query = $str;
		return $this->execQuery($str);
    }

    function update()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$str = "		
				UPDATE PEGAWAI
				SET    
				 	NIP_LAMA= '".$this->getField("NIP_LAMA")."',
				 	NIP_BARU= '".$this->getField("NIP_BARU")."',
				 	SATUAN_KERJA_ID= ".$this->getField("SATUAN_KERJA_ID").",
				 	NAMA= '".$this->getField("NAMA")."',
				 	TEMPAT_LAHIR= '".$this->getField("TEMPAT_LAHIR")."',
				 	TANGGAL_LAHIR= ".$this->getField("TANGGAL_LAHIR").",
				 	JENIS_KELAMIN= '".$this->getField("JENIS_KELAMIN")."',
				 	KEDUDUKAN= '".$this->getField("KEDUDUKAN")."',
				 	SUKU_BANGSA= '".$this->getField("SUKU_BANGSA")."',
				 	GOLONGAN_DARAH= '".$this->getField("GOLONGAN_DARAH")."',
				 	ALAMAT= '".$this->getField("ALAMAT")."',
				 	RT= '".$this->getField("RT")."',
				 	RW= '".$this->getField("RW")."',
				 	KODEPOS= '".$this->getField("KODEPOS")."',
				 	TELEPON= '".$this->getField("TELEPON")."',
				 	HP= '".$this->getField("HP")."',
				 	TELEPON_KANTOR= '".$this->getField("TELEPON_KANTOR")."',
				 	FACEBOOK= '".$this->getField("FACEBOOK")."',
				 	TWITTER= '".$this->getField("TWITTER")."',
				 	WHATSAPP= '".$this->getField("WHATSAPP")."',
				 	TELEGRAM= '".$this->getField("TELEGRAM")."',
					KARTU_PEGAWAI= '".$this->getField("KARTU_PEGAWAI")."',
				 	ASKES= '".$this->getField("ASKES")."',
				 	TASPEN= '".$this->getField("TASPEN")."',
				 	NPWP= '".$this->getField("NPWP")."',
				 	NIK= '".$this->getField("NIK")."',
				 	NO_REKENING= '".$this->getField("NO_REKENING")."',
				 	SK_KONVERSI_NIP= '".$this->getField("SK_KONVERSI_NIP")."',
				 	NO_URUT= '".$this->getField("NO_URUT")."',
				 	NO_KK= '".$this->getField("NO_KK")."',
				 	NO_RAK_BERKAS= '".$this->getField("NO_RAK_BERKAS")."',
				 	BANK_ID= ".$this->getField("BANK_ID").",
				 	AGAMA_ID= ".$this->getField("AGAMA_ID").",
				 	PROPINSI_ID= ".$this->getField("PROPINSI_ID").",
				 	KABUPATEN_ID= ".$this->getField("KABUPATEN_ID").",
				 	KECAMATAN_ID= ".$this->getField("KECAMATAN_ID").",
				 	DESA_ID= ".$this->getField("DESA_ID").",
				 	KETERANGAN_1= '".$this->getField("KETERANGAN_1")."',
				 	KETERANGAN_2= '".$this->getField("KETERANGAN_2")."',
				 	JENIS_PEGAWAI_ID= ".$this->getField("JENIS_PEGAWAI_ID").",
				 	BPJS= '".$this->getField("BPJS")."',
				 	BPJS_TANGGAL= ".$this->getField("BPJS_TANGGAL").",
				 	NPWP_TANGGAL= ".$this->getField("NPWP_TANGGAL").",
				 	ALAMAT_KETERANGAN= '".$this->getField("ALAMAT_KETERANGAN")."',
				 	EMAIL= '".$this->getField("EMAIL")."',
				 	EMAIL_KANTOR= '".$this->getField("EMAIL_KANTOR")."',
				 	REKENING_NAMA= '".$this->getField("REKENING_NAMA")."',
				 	GAJI_POKOK= ".$this->getField("GAJI_POKOK").",
				 	TUNJANGAN= ".$this->getField("TUNJANGAN").",
				 	TUNJANGAN_KELUARGA= ".$this->getField("TUNJANGAN_KELUARGA").",
				 	GAJI_BERSIH= ".$this->getField("GAJI_BERSIH").",
				 	STATUS_MUTASI= ".$this->getField("STATUS_MUTASI").",
				 	TMT_MUTASI= ".$this->getField("TMT_MUTASI").",
				 	INSTANSI_SEBELUM= '".$this->getField("INSTANSI_SEBELUM")."',
				 	LAST_USER= '".$this->getField("LAST_USER")."',
				 	LAST_DATE= ".$this->getField("LAST_DATE").",
				 	USER_LOGIN_ID= ".$this->getField("USER_LOGIN_ID").",
				 	USER_LOGIN_PEGAWAI_ID= ".$this->getField("USER_LOGIN_PEGAWAI_ID").",
				    LAST_LEVEL= ".$this->getField("LAST_LEVEL")."
				WHERE  PEGAWAI_ID = ".$this->getField("PEGAWAI_ID")."
				"; 
		$this->query = $str;
		// echo $str;exit;
		return $this->execQuery($str);
    }
	
	function updateBak()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$str = "		
				UPDATE PEGAWAI
				SET    
				 	STATUS					='".$this->getField("STATUS")."',
			     	SATUAN_KERJA_ID			= ".$this->getField("SATUAN_KERJA_ID")."',
			     	JABATAN_RIWAYAT_ID		= ".$this->getField("JABATAN_RIWAYAT_ID").",
			     	PEGAWAI_STATUS_ID		= ".$this->getField("PEGAWAI_STATUS_ID").",
			     	PENDIDIKAN_RIWAYAT_ID	= ".$this->getField("PENDIDIKAN_RIWAYAT_ID").",
			     	GAJI_RIWAYAT_ID			= ".$this->getField("GAJI_RIWAYAT_ID").",
			     	PANGKAT_RIWAYAT_ID		= ".$this->getField("PANGKAT_RIWAYAT_ID").",
			     	JENIS_PEGAWAI_ID		= ".$this->getField("JENIS_PEGAWAI_ID").",
			     	TIPE_PEGAWAI_ID			='".$this->getField("TIPE_PEGAWAI_ID")."',
			     	STATUS_PEGAWAI_ID			= ".$this->getField("STATUS_PEGAWAI_ID").",
			     	NIP_LAMA				='".$this->getField("NIP_LAMA")."',
			     	NIP_BARU				='".$this->getField("NIP_BARU")."',
			     	NAMA					='".$this->getField("NAMA")."',
			     	GELAR_DEPAN				='".$this->getField("GELAR_DEPAN")."',
			     	GELAR_BELAKANG			='".$this->getField("GELAR_BELAKANG")."',
			     	TEMPAT_LAHIR			='".$this->getField("TEMPAT_LAHIR")."',
			     	TANGGAL_LAHIR			= ".$this->getField("TANGGAL_LAHIR").",
			     	JENIS_KELAMIN			='".$this->getField("JENIS_KELAMIN")."',
			     	STATUS_KAWIN			= ".$this->getField("STATUS_KAWIN").",
			     	SUKU_BANGSA				='".$this->getField("SUKU_BANGSA")."',
			     	GOLONGAN_DARAH			='".$this->getField("GOLONGAN_DARAH")."',
			     	EMAIL					='".$this->getField("EMAIL")."',
			     	ALAMAT					='".$this->getField("ALAMAT")."',
			     	RT						='".$this->getField("RT")."',
			     	RW						='".$this->getField("RW")."',
			     	KODEPOS					='".$this->getField("KODEPOS")."',
			     	TELEPON					='".$this->getField("TELEPON")."',
			     	HP						='".$this->getField("HP")."',
			     	KARTU_PEGAWAI			='".$this->getField("KARTU_PEGAWAI")."',
			     	ASKES					='".$this->getField("ASKES")."',
			     	TASPEN					='".$this->getField("TASPEN")."',
			     	NPWP					='".$this->getField("NPWP")."',
			     	NIK						='".$this->getField("NIK")."',
			     	NO_REKENING				='".$this->getField("NO_REKENING")."',
			     	SK_KONVERSI_NIP			='".$this->getField("SK_KONVERSI_NIP")."',
			     	BANK_ID					= ".$this->getField("BANK_ID").",
			     	AGAMA_ID				= ".$this->getField("AGAMA_ID")."
				WHERE  PEGAWAI_ID = ".$this->getField("PEGAWAI_ID")."
				"; 
		$this->query = $str;
		return $this->execQuery($str);
    }


    function updateIdSapk()
    {
		$str = "		
		UPDATE PEGAWAI
		SET    
		
		 	 PEGAWAI_ID_SAPK= '".$this->getField("PEGAWAI_ID_SAPK")."'
	
		WHERE  PEGAWAI_ID = ".$this->getField("PEGAWAI_ID")."
		"; 
		$this->query = $str;
		// echo "xxx-".$str;exit;
		return $this->execQuery($str);
    }
	
	function delete()
	{
        $str = "
				UPDATE PEGAWAI SET
					STATUS = '1',
					LAST_USER = '".$this->getField("LAST_USER")."',
					USER_LOGIN_PEGAWAI_ID = ".$this->getField("USER_LOGIN_PEGAWAI_ID").",
					USER_LOGIN_ID = '".$this->getField("USER_LOGIN_ID")."',
					LAST_DATE = ".$this->getField("LAST_DATE")."
				WHERE PEGAWAI_ID = ".$this->getField("PEGAWAI_ID")."
				";
		$this->query = $str;
		return $this->execQuery($str);
    }

    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","MASTER_KATEGORI_METODE_EVALUASI_ID"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 
    function selectByParamsSimple($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT
			A.PEGAWAI_ID, A.NIP_LAMA, A.NIP_BARU, A.NAMA
			, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
			FROM PEGAWAI A
			WHERE 1 = 1
		"; 

		// , A.PROPINSI_ID, PROP.NAMA PROPINSI_NAMA, A.KABUPATEN_ID, KAB.NAMA KABUPATEN_NAMA, A.KECAMATAN_ID, KEC.NAMA KECAMATAN_NAMA, A.DESA_ID, KEL.NAMA DESA_NAMA
		// LEFT JOIN PROPINSI PROP ON PROP.PROPINSI_ID = A.PROPINSI_ID
		// LEFT JOIN KABUPATEN KAB ON KAB.KABUPATEN_ID = A.KABUPATEN_ID
		// LEFT JOIN KECAMATAN KEC ON KEC.KECAMATAN_ID = A.KECAMATAN_ID
		// LEFT JOIN KELURAHAN KEL ON KEL.KECAMATAN_ID = A.KECAMATAN_ID AND KEL.KELURAHAN_ID = A.DESA_ID
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }

    function selectByParams($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT
			A.PEGAWAI_ID, A.PEGAWAI_ID_SAPK, A.STATUS, A.SATUAN_KERJA_ID, A.JABATAN_RIWAYAT_ID, A.PENDIDIKAN_RIWAYAT_ID, 
			A.GAJI_RIWAYAT_ID, A.PANGKAT_RIWAYAT_ID, A.JENIS_PEGAWAI_ID, A.KEDUDUKAN, A.TIPE_PEGAWAI_ID, A.PEGAWAI_STATUS_ID, PS.PEGAWAI_STATUS_NAMA,
			PS.PEGAWAI_KEDUDUKAN_TMT, PS.PEGAWAI_KEDUDUKAN_NAMA,
			A.STATUS_PEGAWAI_ID, A.NIP_LAMA, A.NIP_BARU, A.NAMA, A.GELAR_DEPAN, A.GELAR_BELAKANG, A.TEMPAT_LAHIR, A.TANGGAL_LAHIR, 
			A.JENIS_KELAMIN, A.STATUS_KAWIN, A.SUKU_BANGSA, A.GOLONGAN_DARAH, A.EMAIL, A.ALAMAT, A.RT, A.RW, A.KODEPOS, A.TELEPON, A.HP, 
			A.TELEPON_KANTOR, A.FACEBOOK, A.TWITTER, A.WHATSAPP, A.TELEGRAM, A.KARTU_PEGAWAI, A.ASKES, A.TASPEN, A.NPWP, A.NIK, A.NO_REKENING, 
			A.SK_KONVERSI_NIP, A.NO_URUT, A.NO_KK, A.NO_RAK_BERKAS, 
			A.BANK_ID, A.AGAMA_ID
			, A.KETERANGAN_1, A.KETERANGAN_2, A.LAST_USER, A.LAST_DATE, A.JENIS_PENGADAAN_ID
			, A.INFO_SATUAN_KERJA_NAMA SATUAN_KERJA_NAMA_DETIL
			, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
			, A.PROPINSI_ID, P1.PROPINSI_NAMA, A.KABUPATEN_ID, P1.KABUPATEN_NAMA, A.KECAMATAN_ID, P1.KECAMATAN_NAMA, A.DESA_ID, P1.DESA_NAMA
			, JENIS_PEGAWAI_NAMA, A.BPJS, A.BPJS_TANGGAL, A.NPWP_TANGGAL, A.ALAMAT_KETERANGAN
			, A.EMAIL_KANTOR, A.REKENING_NAMA, A.GAJI_POKOK, A.TUNJANGAN, A.TUNJANGAN_KELUARGA, A.GAJI_BERSIH
			, A.STATUS_MUTASI, A.TMT_MUTASI, A.INSTANSI_SEBELUM
			FROM PEGAWAI A
			LEFT JOIN
			(
				SELECT JENIS_PEGAWAI_ID JPID, ID_SAPK JPIDSAPK, NAMA JENIS_PEGAWAI_NAMA FROM JENIS_PEGAWAI
			) JP ON JENIS_PEGAWAI_ID = JPID
			LEFT JOIN
			(
				SELECT A.PEGAWAI_STATUS_ID, A.PEGAWAI_ID, A.STATUS_PEGAWAI_ID, B.NAMA PEGAWAI_STATUS_NAMA
				, A.TMT PEGAWAI_KEDUDUKAN_TMT, C.NAMA PEGAWAI_KEDUDUKAN_NAMA
				FROM PEGAWAI_STATUS A
				INNER JOIN STATUS_PEGAWAI B ON A.STATUS_PEGAWAI_ID = B.STATUS_PEGAWAI_ID
				INNER JOIN STATUS_PEGAWAI_KEDUDUKAN C ON A.STATUS_PEGAWAI_KEDUDUKAN_ID = C.STATUS_PEGAWAI_KEDUDUKAN_ID
			) PS ON A.PEGAWAI_STATUS_ID = PS.PEGAWAI_STATUS_ID
			LEFT JOIN (
				SELECT A.PEGAWAI_ID
				, A.PROPINSI_ID, PROP.NAMA PROPINSI_NAMA, A.KABUPATEN_ID, KAB.NAMA KABUPATEN_NAMA, A.KECAMATAN_ID, KEC.NAMA KECAMATAN_NAMA, A.DESA_ID, KEL.NAMA DESA_NAMA
				FROM PEGAWAI A
				LEFT JOIN (SELECT PROPINSI_ID, NAMA FROM PROPINSI) PROP ON PROP.PROPINSI_ID = A.PROPINSI_ID
				LEFT JOIN (SELECT PROPINSI_ID, KABUPATEN_ID, NAMA FROM KABUPATEN) KAB ON KAB.PROPINSI_ID = A.PROPINSI_ID AND KAB.KABUPATEN_ID = A.KABUPATEN_ID
				LEFT JOIN (SELECT PROPINSI_ID, KABUPATEN_ID, KECAMATAN_ID, NAMA FROM KECAMATAN) KEC ON KEC.PROPINSI_ID = A.PROPINSI_ID AND KEC.KABUPATEN_ID = A.KABUPATEN_ID AND KEC.KECAMATAN_ID = A.KECAMATAN_ID
				LEFT JOIN (SELECT PROPINSI_ID, KABUPATEN_ID, KECAMATAN_ID, KELURAHAN_ID, NAMA FROM KELURAHAN) KEL ON KEL.PROPINSI_ID = A.PROPINSI_ID AND KEL.KABUPATEN_ID = A.KABUPATEN_ID AND KEL.KECAMATAN_ID = A.KECAMATAN_ID AND KEL.KELURAHAN_ID = A.DESA_ID
				WHERE 1 = 1
			) P1 ON P1.PEGAWAI_ID = A.PEGAWAI_ID
			WHERE 1 = 1
		"; 

		// , A.PROPINSI_ID, PROP.NAMA PROPINSI_NAMA, A.KABUPATEN_ID, KAB.NAMA KABUPATEN_NAMA, A.KECAMATAN_ID, KEC.NAMA KECAMATAN_NAMA, A.DESA_ID, KEL.NAMA DESA_NAMA
		// LEFT JOIN PROPINSI PROP ON PROP.PROPINSI_ID = A.PROPINSI_ID
		// LEFT JOIN KABUPATEN KAB ON KAB.KABUPATEN_ID = A.KABUPATEN_ID
		// LEFT JOIN KECAMATAN KEC ON KEC.KECAMATAN_ID = A.KECAMATAN_ID
		// LEFT JOIN KELURAHAN KEL ON KEL.KECAMATAN_ID = A.KECAMATAN_ID AND KEL.KELURAHAN_ID = A.DESA_ID
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }
	
	function selectByParamsMonitoringPegawaiBak($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT 
			A.PEGAWAI_ID, A.NIP_LAMA, A.NIP_BARU
			, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
			, PANG_RIW.KODE PANGKAT_RIWAYAT_KODE, PANG_RIW.TMT_PANGKAT PANGKAT_RIWAYAT_TMT
			, JAB_RIW.JABATAN_NAMA JABATAN_RIWAYAT_NAMA, JAB_RIW.ESELON_NAMA JABATAN_RIWAYAT_ESELON, JAB_RIW.TMT_JABATAN JABATAN_RIWAYAT_TMT
			, A.INFO_SATUAN_KERJA_NAMA SATUAN_KERJA_NAMA, A.INFO_SATUAN_KERJA_INDUK SATUAN_KERJA_INDUK
			, PF.PATH
			, CASE
			WHEN CURRENT_DATE <= G.TANGGAL_AKHIR AND CURRENT_DATE >= G.TANGGAL_MULAI
			THEN 1
			WHEN G.PEGAWAI_ID IS NOT NULL THEN 2
			ELSE 0
			END STATUS_BERLAKU
		FROM PEGAWAI A
		LEFT JOIN
		(
			SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, A.PANGKAT_ID
			FROM PANGKAT_RIWAYAT A
			LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
		) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
			FROM JABATAN_RIWAYAT A
			LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
		) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
		LEFT JOIN SATUAN_KERJA SK ON SK.SATUAN_KERJA_ID = A.SATUAN_KERJA_ID
		LEFT JOIN (SELECT PEGAWAI_ID, PATH FROM PEGAWAI_FILE_DATA WHERE RIWAYAT_TABLE = 'PEGAWAI' AND RIWAYAT_ID = 1) PF ON PF.PEGAWAI_ID = A.PEGAWAI_ID
		LEFT JOIN (SELECT PEGAWAI_ID, TANGGAL_MULAI, TANGGAL_AKHIR FROM HUKUMAN_TERAKHIR X) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
		WHERE 1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
    }

    function selectByParamsMonitoringPegawaiBak1($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT A.*, PF.PATH
		, A.INFO_SATUAN_KERJA_NAMA SATUAN_KERJA_NAMA
		, A.INFO_SATUAN_KERJA_INDUK SATUAN_KERJA_INDUK
		FROM
		(
		SELECT 
			A.PEGAWAI_ID, A.NIP_LAMA, A.NIP_BARU
			, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
			, COALESCE(PANG_RIW.KODE, PPPK_RIW.KODE) PANGKAT_RIWAYAT_KODE
			, COALESCE(PANG_RIW.TMT_PANGKAT, PPPK_RIW.TMT_PPPK) PANGKAT_RIWAYAT_TMT
			, COALESCE(JAB_RIW.JABATAN_NAMA, PPPK_RIW.JABATAN_TUGAS) JABATAN_RIWAYAT_NAMA
			, JAB_RIW.ESELON_NAMA JABATAN_RIWAYAT_ESELON, JAB_RIW.TMT_JABATAN JABATAN_RIWAYAT_TMT
			, JAB_RIW.ESELON_ID, PANG_RIW.PANGKAT_ID, PANG_RIW.TMT_PANGKAT, A.SATUAN_KERJA_ID
			, CASE
			WHEN CURRENT_DATE <= G.TANGGAL_AKHIR AND CURRENT_DATE >= G.TANGGAL_MULAI
			THEN 1
			WHEN G.PEGAWAI_ID IS NOT NULL THEN 2
			ELSE 0
			END STATUS_BERLAKU
		FROM PEGAWAI A
		LEFT JOIN
		(
			SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, A.PANGKAT_ID
			FROM PANGKAT_RIWAYAT A
			LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
		) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
			FROM JABATAN_RIWAYAT A
			LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
		) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
		LEFT JOIN SATUAN_KERJA SK ON SK.SATUAN_KERJA_ID = A.SATUAN_KERJA_ID
		LEFT JOIN (SELECT PEGAWAI_ID, TANGGAL_MULAI, TANGGAL_AKHIR FROM HUKUMAN_TERAKHIR X) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
		LEFT JOIN
		(
			SELECT
			A.SK_PPPK_ID, B.KODE, A.TMT_PPPK, A.GOLONGAN_PPPK_ID
			, A.JABATAN_TUGAS
			FROM SK_PPPK A
			LEFT JOIN GOLONGAN_PPPK B ON A.GOLONGAN_PPPK_ID = B.GOLONGAN_PPPK_ID
		) PPPK_RIW ON A.SK_PPPK_ID = PPPK_RIW.SK_PPPK_ID
		WHERE 1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." 
		) A
		LEFT JOIN
		(
			SELECT A.PEGAWAI_ID, A1.PATH 
			FROM pegawai_data_akhir A
			INNER JOIN pegawai_file A1 ON A.PEGAWAI_ID = A1.PEGAWAI_ID AND A1.PEGAWAI_FILE_ID = A.V_ID
			WHERE A.INFO_MODE = 'FOTO_PEGAWAI'
		) PF ON PF.PEGAWAI_ID = A.PEGAWAI_ID
		WHERE 1=1 ".$order;
		// LEFT JOIN (SELECT PEGAWAI_ID, PATH FROM P_PEGAWAI_FILE_DATA('')) PF ON PF.PEGAWAI_ID = A.PEGAWAI_ID
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
    }

    function selectByParamsMonitoringPegawai($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT A.*, A.PATH_FOTO PATH
		FROM
		(
			SELECT 
				A.PEGAWAI_ID, A.NIP_LAMA, A.NIP_BARU, A.PATH_FOTO
				, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
				, COALESCE(PANG_RIW.KODE, PPPK_RIW.KODE) PANGKAT_RIWAYAT_KODE
				, COALESCE(PANG_RIW.TMT_PANGKAT, PPPK_RIW.TMT_PPPK) PANGKAT_RIWAYAT_TMT
				, COALESCE(JAB_RIW.JABATAN_NAMA, PPPK_RIW.JABATAN_TUGAS) JABATAN_RIWAYAT_NAMA
				, JAB_RIW.ESELON_NAMA JABATAN_RIWAYAT_ESELON, JAB_RIW.TMT_JABATAN JABATAN_RIWAYAT_TMT
				, JAB_RIW.ESELON_ID, PANG_RIW.PANGKAT_ID, PANG_RIW.TMT_PANGKAT, A.SATUAN_KERJA_ID
				, CASE
				WHEN CURRENT_DATE <= G.TANGGAL_AKHIR AND CURRENT_DATE >= G.TANGGAL_MULAI
				THEN 1
				WHEN G.PEGAWAI_ID IS NOT NULL THEN 2
				ELSE 0
				END STATUS_BERLAKU
				, A.INFO_SATUAN_KERJA_NAMA SATUAN_KERJA_NAMA
				, A.INFO_SATUAN_KERJA_INDUK SATUAN_KERJA_INDUK
			FROM PEGAWAI A
			LEFT JOIN
			(
				SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, A.PANGKAT_ID
				FROM PANGKAT_RIWAYAT A
				LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
			) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
			LEFT JOIN
			(
				SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
				FROM JABATAN_RIWAYAT A
				LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
			) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
			LEFT JOIN (SELECT PEGAWAI_ID, TANGGAL_MULAI, TANGGAL_AKHIR FROM HUKUMAN_TERAKHIR X) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
			LEFT JOIN
			(
				SELECT
				A.SK_PPPK_ID, B.KODE, A.TMT_PPPK, A.GOLONGAN_PPPK_ID
				, A.JABATAN_TUGAS
				FROM SK_PPPK A
				LEFT JOIN GOLONGAN_PPPK B ON A.GOLONGAN_PPPK_ID = B.GOLONGAN_PPPK_ID
			) PPPK_RIW ON A.SK_PPPK_ID = PPPK_RIW.SK_PPPK_ID
			WHERE 1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." 
		) A
		WHERE 1=1 ".$order;
		// LEFT JOIN
		// (
		// 	SELECT A.PEGAWAI_ID, A1.PATH 
		// 	FROM pegawai_data_akhir A
		// 	INNER JOIN pegawai_file A1 ON A.PEGAWAI_ID = A1.PEGAWAI_ID AND A1.PEGAWAI_FILE_ID = A.V_ID
		// 	WHERE A.INFO_MODE = 'FOTO_PEGAWAI'
		// ) PF ON PF.PEGAWAI_ID = A.PEGAWAI_ID
		// LEFT JOIN (SELECT PEGAWAI_ID, PATH FROM P_PEGAWAI_FILE_DATA('')) PF ON PF.PEGAWAI_ID = A.PEGAWAI_ID
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
    }
	
	function selectByParamsMonitoring($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
				SELECT A.PEGAWAI_ID, CASE A.STATUS WHEN '1' THEN 'Tidak Aktif' ELSE 'Aktif' END STATUS_NAMA, A.SATUAN_KERJA_ID,
					A.JABATAN_RIWAYAT_ID, A.PEGAWAI_STATUS_ID, 
					A.PENDIDIKAN_RIWAYAT_ID, A.GAJI_RIWAYAT_ID, A.PANGKAT_RIWAYAT_ID, A.JENIS_PEGAWAI_ID, A.KEDUDUKAN, A.TIPE_PEGAWAI_ID, 
					A.STATUS_PEGAWAI_ID, A.NIP_LAMA, A.NIP_BARU, A.NAMA, A.GELAR_DEPAN, A.GELAR_BELAKANG, A.TEMPAT_LAHIR, A.TANGGAL_LAHIR, 
					A.JENIS_KELAMIN, A.STATUS_KAWIN, A.SUKU_BANGSA, A.GOLONGAN_DARAH, A.EMAIL, A.ALAMAT, A.RT, A.RW, A.KODEPOS, 
					A.TELEPON, A.HP, A.TELEPON_KANTOR, A.FACEBOOK, A.TWITTER, A.WHATSAPP, A.TELEGRAM, 
					A.KARTU_PEGAWAI, A.ASKES, A.TASPEN, A.NPWP, A.NIK, A.NO_REKENING, 
					A.SK_KONVERSI_NIP, A.NO_URUT, A.NO_KK, A.NO_RAK_BERKAS, A.BANK_ID, A.KETERANGAN_1, A.KETERANGAN_2,
					A.AGAMA_ID, A.INFO_SATUAN_KERJA_NAMA SATUAN_KERJA_NAMA
					, PANG_RIW.KODE PANGKAT_RIWAYAT_KODE, PANG_RIW.TMT_PANGKAT PANGKAT_RIWAYAT_TMT
					, JAB_RIW.JABATAN_NAMA JABATAN_RIWAYAT_NAMA, JAB_RIW.ESELON_NAMA JABATAN_RIWAYAT_ESELON, JAB_RIW.TMT_JABATAN JABATAN_RIWAYAT_TMT
					, SK.NAMA SATUAN_KERJA_NAMA, A.INFO_SATUAN_KERJA_INDUK SATUAN_KERJA_INDUK
					, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
					, PF.PATH
				FROM PEGAWAI A
				LEFT JOIN
				(
					SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT
					FROM PANGKAT_RIWAYAT A
					LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
				) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
				LEFT JOIN
				(
					SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
					FROM JABATAN_RIWAYAT A
					LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
				) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
				LEFT JOIN SATUAN_KERJA SK ON SK.SATUAN_KERJA_ID = A.SATUAN_KERJA_ID
				LEFT JOIN (SELECT PEGAWAI_ID, PATH FROM PEGAWAI_FILE_DATA WHERE RIWAYAT_TABLE = 'PEGAWAI' AND RIWAYAT_ID = 1) PF ON PF.PEGAWAI_ID = A.PEGAWAI_ID
				WHERE 1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }
	
	function selectByParamsCetakPegawai($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT
			A.NIP_LAMA, AMBIL_FORMAT_NIP_BARU(A.NIP_BARU) NIP_BARU,
			(CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA,
			A.TEMPAT_LAHIR, A.TANGGAL_LAHIR, A.JENIS_KELAMIN, PS.PEGAWAI_STATUS_NAMA STATUS_PEGAWAI
			, COALESCE(PANG_RIW.KODE, PPPK_RIW.KODE) GOL_RUANG
			, COALESCE(PANG_RIW.TMT_PANGKAT, PPPK_RIW.TMT_PPPK) TMT_PANGKAT
			, COALESCE(JAB_RIW.JABATAN_NAMA, PPPK_RIW.JABATAN_TUGAS) JABATAN
			, COALESCE(T.NAMA,PPPK_TIPE_PEGAWAI) TIPE_PEGAWAI, JAB_RIW.ESELON_NAMA ESELON
			, COALESCE(JAB_RIW.TMT_JABATAN, PPPK_RIW.TMT_PPPK) TMT_JABATAN
			, D.NAMA AGAMA, A.TELEPON, A.ALAMAT,
			A.INFO_SATUAN_KERJA_INDUK SATKER_INDUK,
			AMBIL_SATKER_NAMA_DETIL(A.SATUAN_KERJA_ID) NAMA_SATKER,
			CASE WHEN A.TANGGAL_LAHIR IS NULL THEN NULL
			ELSE
				CASE WHEN TO_CHAR(A.TANGGAL_LAHIR, 'MM') = '12' THEN
					CASE WHEN A.SK_PPPK_ID IS NOT NULL THEN
						TO_DATE(CONCAT('01-01-', CAST(CAST(TO_CHAR(A.TANGGAL_LAHIR, 'YYYY') AS NUMERIC) + 1 + COALESCE(PPPK_BUP, 0) AS TEXT)), 'DD-MM-YYYY')
					ELSE
						TO_DATE(CONCAT('01-01-', CAST(CAST(TO_CHAR(A.TANGGAL_LAHIR, 'YYYY') AS NUMERIC) + 1 + COALESCE(JAB_RIW.USIA_BUP, 0) AS TEXT)), 'DD-MM-YYYY')
						
					END
				ELSE
					CASE WHEN A.SK_PPPK_ID IS NOT NULL THEN
						TO_DATE(CONCAT('01-', CAST(TO_CHAR(A.TANGGAL_LAHIR, 'MM') AS NUMERIC) + 1, '-', CAST(CAST(TO_CHAR(A.TANGGAL_LAHIR, 'YYYY') AS NUMERIC) + COALESCE(PPPK_BUP, 0) AS TEXT)), 'DD-MM-YYYY')
					ELSE
						TO_DATE(CONCAT('01-', CAST(TO_CHAR(A.TANGGAL_LAHIR, 'MM') AS NUMERIC) + 1, '-', CAST(CAST(TO_CHAR(A.TANGGAL_LAHIR, 'YYYY') AS NUMERIC) + COALESCE(JAB_RIW.USIA_BUP, 0) AS TEXT)), 'DD-MM-YYYY')
					END
				END
			END TMT_PENSIUN,
			(CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN '' ELSE F.PENDIDIKAN_NAMA END) || (CASE WHEN COALESCE(NULLIF(F.PENDIDIKAN_JURUSAN_NAMA,'') , NULL ) IS NULL THEN '' ELSE ' - ' || F.PENDIDIKAN_JURUSAN_NAMA END) PENDIDIKAN,
			CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN NULL ELSE TO_CHAR(F.TANGGAL_STTB, 'YYYY') END LULUS,
			'' KETERANGAN
		FROM PEGAWAI A
		LEFT JOIN
		(
			SELECT A.PEGAWAI_STATUS_ID, A.PEGAWAI_ID, A.STATUS_PEGAWAI_ID, B.NAMA PEGAWAI_STATUS_NAMA
			, A.TMT PEGAWAI_KEDUDUKAN_TMT, C.NAMA PEGAWAI_KEDUDUKAN_NAMA
			FROM PEGAWAI_STATUS A
			INNER JOIN STATUS_PEGAWAI B ON A.STATUS_PEGAWAI_ID = B.STATUS_PEGAWAI_ID
			INNER JOIN STATUS_PEGAWAI_KEDUDUKAN C ON A.STATUS_PEGAWAI_KEDUDUKAN_ID = C.STATUS_PEGAWAI_KEDUDUKAN_ID
		) PS ON A.PEGAWAI_STATUS_ID = PS.PEGAWAI_STATUS_ID
		LEFT JOIN
		(
			SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, A.PANGKAT_ID
			FROM PANGKAT_RIWAYAT A
			LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
		) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
			, A.JABATAN_FU_ID, A.JABATAN_FT_ID
			, COALESCE(ED.USIA_BUP, JFU.USIA_BUP, JFT.USIA_BUP) USIA_BUP
			FROM JABATAN_RIWAYAT A
			LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
			LEFT JOIN ESELON_DETIL ED ON ED.ESELON_ID = A.ESELON_ID AND ED.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(ED.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			LEFT JOIN JABATAN_FU_DETIL JFU ON JFU.JABATAN_FU_ID = A.JABATAN_FU_ID AND JFU.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFU.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			LEFT JOIN JABATAN_FT_DETIL JFT ON JFT.JABATAN_FT_ID = A.JABATAN_FT_ID AND JFT.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFT.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
		) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
		LEFT JOIN TIPE_PEGAWAI T ON CAST(A.TIPE_PEGAWAI_ID AS NUMERIC) = T.TIPE_PEGAWAI_ID
		LEFT JOIN AGAMA D ON A.AGAMA_ID = D.AGAMA_ID
		LEFT JOIN PENDIDIKAN_RIWAYAT_DATA F ON A.PENDIDIKAN_RIWAYAT_ID = F.PENDIDIKAN_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT
			A.SK_PPPK_ID, B.KODE, A.TMT_PPPK, A.GOLONGAN_PPPK_ID
			, A.JABATAN_TUGAS, PPPK_TIPE_PEGAWAI, BUP PPPK_BUP
			FROM SK_PPPK A
			LEFT JOIN GOLONGAN_PPPK B ON A.GOLONGAN_PPPK_ID = B.GOLONGAN_PPPK_ID
			LEFT JOIN
			(
				SELECT
				A.*
				, CASE JENIS_JABATAN_FT_PPPK_ID
				WHEN '1' THEN 'Pendidikan'
				WHEN '2' then 'Kesehatan'
				WHEN '3' then 'Lainnya'
				ELSE '' END PPPK_TIPE_PEGAWAI
				from JABATAN_FT_PPPK A
			) JJ ON A.JABATAN_FT_ID = JJ.JABATAN_FT_PPPK_ID
		) PPPK_RIW ON A.SK_PPPK_ID = PPPK_RIW.SK_PPPK_ID
		WHERE 1=1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }

	//copy dari selectByParamsCetakPegawai modifikasi buat tambah info data cpns/pns // 20210106_1
	function selectByParamsCetakPegawaiCpnsPns($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT A
		.NIP_LAMA,
		AMBIL_FORMAT_NIP_BARU ( A.NIP_BARU ) NIP_BARU,
		(
		CASE
				
				WHEN COALESCE ( NULLIF ( A.GELAR_DEPAN, '' ), NULL ) IS NULL THEN
				'' ELSE A.GELAR_DEPAN || ' ' 
			END 
				) || A.NAMA || (
			CASE
					
					WHEN COALESCE ( NULLIF ( A.GELAR_BELAKANG, '' ), NULL ) IS NULL THEN
					'' ELSE'' || A.GELAR_BELAKANG 
				END 
				) NAMA,
				A.TEMPAT_LAHIR,
				A.TANGGAL_LAHIR,
				PS.PEGAWAI_STATUS_NAMA STATUS_PEGAWAI,
				PANG_RIW.KODE GOL_RUANG,
				PANG_RIW.TMT_PANGKAT,
				T.NAMA TIPE_PEGAWAI,
				JAB_RIW.ESELON_NAMA ESELON,
				JAB_RIW.JABATAN_NAMA JABATAN,
				JAB_RIW.TMT_JABATAN,
				A.INFO_SATUAN_KERJA_INDUK SATKER_INDUK,
				AMBIL_SATKER_NAMA_DETIL ( A.SATUAN_KERJA_ID ) NAMA_SATKER,
				( CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN '' ELSE F.PENDIDIKAN_NAMA END ) || (
			CASE
					
					WHEN COALESCE ( NULLIF ( F.PENDIDIKAN_JURUSAN_NAMA, '' ), NULL ) IS NULL THEN
					'' ELSE' - ' || F.PENDIDIKAN_JURUSAN_NAMA 
				END 
					) PENDIDIKAN,
				CPNS_RIW.KODE GOL_CPNS,
				CPNS_RIW.TMT_CPNS,
				CPNS_RIW.MASA_KERJA_TAHUN MASA_KERJA_TAHUN_CPNS,
				CPNS_RIW.MASA_KERJA_BULAN MASA_KERJA_BULAN_CPNS,
				PNS_RIW.KODE GOL_PNS,
				PNS_RIW.TMT_PNS,
				PNS_RIW.MASA_KERJA_TAHUN MASA_KERJA_TAHUN_PNS,
				PNS_RIW.MASA_KERJA_BULAN MASA_KERJA_BULAN_PNS
				FROM
				PEGAWAI
				A LEFT JOIN (
				SELECT A
					.PEGAWAI_STATUS_ID,
					A.PEGAWAI_ID,
					A.STATUS_PEGAWAI_ID,
					B.NAMA PEGAWAI_STATUS_NAMA,
					A.TMT PEGAWAI_KEDUDUKAN_TMT,
					C.NAMA PEGAWAI_KEDUDUKAN_NAMA 
				FROM
					PEGAWAI_STATUS
					A INNER JOIN STATUS_PEGAWAI B ON A.STATUS_PEGAWAI_ID = B.STATUS_PEGAWAI_ID
					INNER JOIN STATUS_PEGAWAI_KEDUDUKAN C ON A.STATUS_PEGAWAI_KEDUDUKAN_ID = C.STATUS_PEGAWAI_KEDUDUKAN_ID 
				) PS ON A.PEGAWAI_STATUS_ID = PS.PEGAWAI_STATUS_ID
				LEFT JOIN (
				SELECT A
					.PANGKAT_RIWAYAT_ID,
					B.KODE,
					A.TMT_PANGKAT,
					A.PANGKAT_ID 
				FROM
					PANGKAT_RIWAYAT
					A LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID 
				) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
				LEFT JOIN (
				SELECT A
					.JABATAN_RIWAYAT_ID,
					COALESCE ( A.ESELON_ID, 99 ) ESELON_ID,
					B.NAMA ESELON_NAMA,
					A.TMT_JABATAN,
					A.NAMA JABATAN_NAMA,
					A.JABATAN_FU_ID,
					A.JABATAN_FT_ID,
					COALESCE ( ED.USIA_BUP, JFU.USIA_BUP, JFT.USIA_BUP ) USIA_BUP 
				FROM
					JABATAN_RIWAYAT
					A LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
					LEFT JOIN ESELON_DETIL ED ON ED.ESELON_ID = A.ESELON_ID 
					AND ED.TANGGAL_AWAL <= CURRENT_DATE 
					AND COALESCE ( ED.TANGGAL_AKHIR, CURRENT_DATE ) >=
					CURRENT_DATE LEFT JOIN JABATAN_FU_DETIL JFU ON JFU.JABATAN_FU_ID = A.JABATAN_FU_ID 
					AND JFU.TANGGAL_AWAL <= CURRENT_DATE 
					AND COALESCE ( JFU.TANGGAL_AKHIR, CURRENT_DATE ) >=
					CURRENT_DATE LEFT JOIN JABATAN_FT_DETIL JFT ON JFT.JABATAN_FT_ID = A.JABATAN_FT_ID 
					AND JFT.TANGGAL_AWAL <= CURRENT_DATE 
					AND COALESCE ( JFT.TANGGAL_AKHIR, CURRENT_DATE ) >= CURRENT_DATE 
				) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
				LEFT JOIN TIPE_PEGAWAI T ON CAST ( A.TIPE_PEGAWAI_ID AS NUMERIC ) = T.TIPE_PEGAWAI_ID
				LEFT JOIN AGAMA D ON A.AGAMA_ID = D.AGAMA_ID
				LEFT JOIN PENDIDIKAN_RIWAYAT_DATA F ON A.PENDIDIKAN_RIWAYAT_ID = F.PENDIDIKAN_RIWAYAT_ID
				
				LEFT JOIN (
				SELECT A
					.PEGAWAI_ID,
					B.KODE,
					A.TMT_CPNS,
					A.PANGKAT_ID,
					A.MASA_KERJA_TAHUN,
				  A.MASA_KERJA_BULAN 
				FROM
					SK_CPNS
					A LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID 
				) CPNS_RIW ON A.PEGAWAI_ID = CPNS_RIW.PEGAWAI_ID			
				
				LEFT JOIN (
				SELECT A
					.PEGAWAI_ID,
					B.KODE,
					A.TMT_PNS,
					A.PANGKAT_ID,
					A.MASA_KERJA_TAHUN,
				  A.MASA_KERJA_BULAN 
				FROM
					SK_PNS
					A LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID 
			
		) PNS_RIW ON A.PEGAWAI_ID = PNS_RIW.PEGAWAI_ID 
		WHERE
			1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }




//copy dari selectByParamsCetakPegawai modifikasi buat rekon PNS 2020 // 20200409_1
	function selectByParamsCetakRekon($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT
			A.NIP_LAMA, AMBIL_FORMAT_NIP_BARU(A.NIP_BARU) NIP_BARU,
			(CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA,
			A.TEMPAT_LAHIR, A.TANGGAL_LAHIR, A.JENIS_KELAMIN, PS.PEGAWAI_STATUS_NAMA STATUS_PEGAWAI,
			PANG_RIW.KODE GOL_RUANG, PANG_RIW.TMT_PANGKAT,
			T.NAMA TIPE_PEGAWAI, JAB_RIW.ESELON_NAMA ESELON, JAB_RIW.JABATAN_NAMA JABATAN, JAB_RIW.TMT_JABATAN, D.NAMA AGAMA, A.TELEPON, A.ALAMAT,
			A.INFO_SATUAN_KERJA_INDUK SATKER_INDUK,
			AMBIL_SATKER_NAMA_DETIL(A.SATUAN_KERJA_ID) NAMA_SATKER,
			CASE WHEN A.TANGGAL_LAHIR IS NULL THEN NULL
			ELSE
				CASE WHEN TO_CHAR(A.TANGGAL_LAHIR, 'MM') = '12' THEN
				TO_DATE(CONCAT('01-01-', CAST(CAST(TO_CHAR(A.TANGGAL_LAHIR, 'YYYY') AS NUMERIC) + 1 + COALESCE(JAB_RIW.USIA_BUP, 0) AS TEXT)), 'DD-MM-YYYY')
				ELSE
				TO_DATE(CONCAT('01-', CAST(TO_CHAR(A.TANGGAL_LAHIR, 'MM') AS NUMERIC) + 1, '-', CAST(CAST(TO_CHAR(A.TANGGAL_LAHIR, 'YYYY') AS NUMERIC) + COALESCE(JAB_RIW.USIA_BUP, 0) AS TEXT)), 'DD-MM-YYYY')
				END
			END TMT_PENSIUN,
			CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN '' ELSE F.PENDIDIKAN_NAMA END TK_PENDIDIKAN, (CASE WHEN COALESCE(NULLIF(F.PENDIDIKAN_JURUSAN_NAMA,'') , NULL ) IS NULL THEN '' ELSE '' || F.PENDIDIKAN_JURUSAN_NAMA END) PENDIDIKAN,
			CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN NULL ELSE TO_CHAR(F.TANGGAL_STTB, 'YYYY') END LULUS,
			'' KETERANGAN
		FROM PEGAWAI A
		LEFT JOIN
		(
			SELECT A.PEGAWAI_STATUS_ID, A.PEGAWAI_ID, A.STATUS_PEGAWAI_ID, B.NAMA PEGAWAI_STATUS_NAMA
			, A.TMT PEGAWAI_KEDUDUKAN_TMT, C.NAMA PEGAWAI_KEDUDUKAN_NAMA
			FROM PEGAWAI_STATUS A
			INNER JOIN STATUS_PEGAWAI B ON A.STATUS_PEGAWAI_ID = B.STATUS_PEGAWAI_ID
			INNER JOIN STATUS_PEGAWAI_KEDUDUKAN C ON A.STATUS_PEGAWAI_KEDUDUKAN_ID = C.STATUS_PEGAWAI_KEDUDUKAN_ID
		) PS ON A.PEGAWAI_STATUS_ID = PS.PEGAWAI_STATUS_ID
		LEFT JOIN
		(
			SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, A.PANGKAT_ID
			FROM PANGKAT_RIWAYAT A
			LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
		) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
			, A.JABATAN_FU_ID, A.JABATAN_FT_ID
			, COALESCE(ED.USIA_BUP, JFU.USIA_BUP, JFT.USIA_BUP) USIA_BUP
			FROM JABATAN_RIWAYAT A
			LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
			LEFT JOIN ESELON_DETIL ED ON ED.ESELON_ID = A.ESELON_ID AND ED.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(ED.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			LEFT JOIN JABATAN_FU_DETIL JFU ON JFU.JABATAN_FU_ID = A.JABATAN_FU_ID AND JFU.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFU.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			LEFT JOIN JABATAN_FT_DETIL JFT ON JFT.JABATAN_FT_ID = A.JABATAN_FT_ID AND JFT.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFT.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
		) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
		LEFT JOIN TIPE_PEGAWAI T ON CAST(A.TIPE_PEGAWAI_ID AS NUMERIC) = T.TIPE_PEGAWAI_ID
		LEFT JOIN AGAMA D ON A.AGAMA_ID = D.AGAMA_ID
		LEFT JOIN PENDIDIKAN_RIWAYAT_DATA F ON A.PENDIDIKAN_RIWAYAT_ID = F.PENDIDIKAN_RIWAYAT_ID
		WHERE 1=1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }


//copy dari selectByParamsCetakPegawai modifikasi buat cetak idpresensi Pegawai 2022 // 20221224_1
function selectByParamsCetakIdpresensi($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
{
	$str = "
	SELECT
		A.pegawai_id AS id_presensi, 
		A.nip_baru AS nip_baru, 
		LEFT(A.nama, 25) AS nama, 
		satuan_kerja.satuan_kerja_id AS id_Area_Unit_Kerja, 
		satuan_kerja.nama AS nama_Unit_Kerja, 
		satuan_kerja.nama_singkat AS nama_Area_Unit_Kerja, 
		satuan_kerja.status_mesin_posisi AS status_mesin,
		ambil_satker_mesin_posisi(satuan_kerja.satuan_kerja_id) AS id_Area_Atas,
		ambil_satker_nama(CAST(ambil_satker_mesin_posisi(satuan_kerja.satuan_kerja_id) AS INTEGER)) AS nama_Atas,
		ambil_satker_nama_singkat(CAST(ambil_satker_mesin_posisi(satuan_kerja.satuan_kerja_id) AS INTEGER)) AS nama_Area_Atas
	FROM
		pegawai A
	LEFT JOIN
		satuan_kerja
		ON 
			A.satuan_kerja_id = satuan_kerja.satuan_kerja_id
			
	LEFT JOIN
			(
				SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, A.PANGKAT_ID
				FROM PANGKAT_RIWAYAT A
				LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
			) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
	LEFT JOIN
			(
				SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
				, A.JABATAN_FU_ID, A.JABATAN_FT_ID
				, COALESCE(ED.USIA_BUP, JFU.USIA_BUP, JFT.USIA_BUP) USIA_BUP
				FROM JABATAN_RIWAYAT A
				LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
				LEFT JOIN ESELON_DETIL ED ON ED.ESELON_ID = A.ESELON_ID AND ED.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(ED.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
				LEFT JOIN JABATAN_FU_DETIL JFU ON JFU.JABATAN_FU_ID = A.JABATAN_FU_ID AND JFU.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFU.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
				LEFT JOIN JABATAN_FT_DETIL JFT ON JFT.JABATAN_FT_ID = A.JABATAN_FT_ID AND JFT.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFT.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
	WHERE 1=1
	"; 
	
	foreach ($paramsArray as $key => $val)
	{
		$str .= " AND $key = '$val' ";
	}
	
	$str .= $statement." ".$order;
	$this->query = $str;
	//echo $str;exit;
	return $this->selectLimit($str,$limit,$from); 
	
}




//copy dari selectByParamsCetakPegawai modifikasi buat tambah jenjang pendidikan di excel nya // 20200127_1

	function selectByParamsCetakPegawaiRendy20200127_1($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT
			A.NIP_LAMA, AMBIL_FORMAT_NIP_BARU(A.NIP_BARU) NIP_BARU,
			(CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA,
			A.TEMPAT_LAHIR, A.TANGGAL_LAHIR, A.JENIS_KELAMIN, PS.PEGAWAI_STATUS_NAMA STATUS_PEGAWAI,
			PANG_RIW.KODE GOL_RUANG, PANG_RIW.TMT_PANGKAT,
			T.NAMA TIPE_PEGAWAI, JAB_RIW.ESELON_NAMA ESELON, JAB_RIW.JABATAN_NAMA JABATAN, JAB_RIW.TMT_JABATAN, D.NAMA AGAMA, A.TELEPON, A.ALAMAT,
			A.INFO_SATUAN_KERJA_INDUK SATKER_INDUK,
			AMBIL_SATKER_NAMA_DETIL(A.SATUAN_KERJA_ID) NAMA_SATKER,
			CASE WHEN A.TANGGAL_LAHIR IS NULL THEN NULL
			ELSE
				CASE WHEN TO_CHAR(A.TANGGAL_LAHIR, 'MM') = '12' THEN
				TO_DATE(CONCAT('01-01-', CAST(CAST(TO_CHAR(A.TANGGAL_LAHIR, 'YYYY') AS NUMERIC) + 1 + COALESCE(JAB_RIW.USIA_BUP, 0) AS TEXT)), 'DD-MM-YYYY')
				ELSE
				TO_DATE(CONCAT('01-', CAST(TO_CHAR(A.TANGGAL_LAHIR, 'MM') AS NUMERIC) + 1, '-', CAST(CAST(TO_CHAR(A.TANGGAL_LAHIR, 'YYYY') AS NUMERIC) + COALESCE(JAB_RIW.USIA_BUP, 0) AS TEXT)), 'DD-MM-YYYY')
				END
			END TMT_PENSIUN,
			(CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN '' ELSE F.PENDIDIKAN_NAMA END) || (CASE WHEN COALESCE(NULLIF(F.PENDIDIKAN_JURUSAN_NAMA,'') , NULL ) IS NULL THEN '' ELSE ' - ' || F.PENDIDIKAN_JURUSAN_NAMA END) PENDIDIKAN,
			(CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN '' ELSE F.PENDIDIKAN_NAMA END) TK_PENDIDIKAN,
			(CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN '' ELSE F.PENDIDIKAN_JURUSAN_NAMA END) JUR_PENDIDIKAN,
			CASE WHEN A.PENDIDIKAN_RIWAYAT_ID IS NULL THEN NULL ELSE TO_CHAR(F.TANGGAL_STTB, 'YYYY') END LULUS,
			'' KETERANGAN
		FROM PEGAWAI A
		LEFT JOIN
		(
			SELECT A.PEGAWAI_STATUS_ID, A.PEGAWAI_ID, A.STATUS_PEGAWAI_ID, B.NAMA PEGAWAI_STATUS_NAMA
			, A.TMT PEGAWAI_KEDUDUKAN_TMT, C.NAMA PEGAWAI_KEDUDUKAN_NAMA
			FROM PEGAWAI_STATUS A
			INNER JOIN STATUS_PEGAWAI B ON A.STATUS_PEGAWAI_ID = B.STATUS_PEGAWAI_ID
			INNER JOIN STATUS_PEGAWAI_KEDUDUKAN C ON A.STATUS_PEGAWAI_KEDUDUKAN_ID = C.STATUS_PEGAWAI_KEDUDUKAN_ID
		) PS ON A.PEGAWAI_STATUS_ID = PS.PEGAWAI_STATUS_ID
		LEFT JOIN
		(
			SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, A.PANGKAT_ID
			FROM PANGKAT_RIWAYAT A
			LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
		) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
			, A.JABATAN_FU_ID, A.JABATAN_FT_ID
			, COALESCE(ED.USIA_BUP, JFU.USIA_BUP, JFT.USIA_BUP) USIA_BUP
			FROM JABATAN_RIWAYAT A
			LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
			LEFT JOIN ESELON_DETIL ED ON ED.ESELON_ID = A.ESELON_ID AND ED.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(ED.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			LEFT JOIN JABATAN_FU_DETIL JFU ON JFU.JABATAN_FU_ID = A.JABATAN_FU_ID AND JFU.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFU.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			LEFT JOIN JABATAN_FT_DETIL JFT ON JFT.JABATAN_FT_ID = A.JABATAN_FT_ID AND JFT.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFT.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
		) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
		LEFT JOIN TIPE_PEGAWAI T ON CAST(A.TIPE_PEGAWAI_ID AS NUMERIC) = T.TIPE_PEGAWAI_ID
		LEFT JOIN AGAMA D ON A.AGAMA_ID = D.AGAMA_ID
		LEFT JOIN PENDIDIKAN_RIWAYAT_DATA F ON A.PENDIDIKAN_RIWAYAT_ID = F.PENDIDIKAN_RIWAYAT_ID
		WHERE 1=1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }


//copy dari selectByParamsCetakRekon modifikasi buat menu cek_data_rekon_pns di menu Export // 20200814_1
	function selectByParamsCetakCekDataRekon($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order='')
	{
		$str = "
	SELECT A
		.*,
	CASE
			
			WHEN ( cek_jurusan <> '' ) 
			OR ( cek_pangkat_gaji <> '' ) 
			OR ( cek_status_sk_pns <> '' ) 
			OR ( cek_ppk <> '' ) THEN
				'bahaya' ELSE'aman' 
			END AS hasil_cek 
		FROM
			(
			SELECT
				P.pegawai_id,
				P.satuan_kerja_id,
				P.status_pegawai_id,
			CASE
					
					WHEN P.status_pegawai_id = 1 THEN
					'CPNS' 
					WHEN P.status_pegawai_id = 2 THEN
					'PNS' ELSE'' 
				END AS status_nama,
				P.tipe_pegawai_id,
			CASE
					
					WHEN P.tipe_pegawai_id = '11' THEN
					'Struktural' 
					WHEN P.tipe_pegawai_id = '12' THEN
					'Pelaksana' 
					WHEN P.tipe_pegawai_id = '21' THEN
					'JFT Pendidikan' 
					WHEN P.tipe_pegawai_id = '22' THEN
					'JFT Kesehatan' 
					WHEN P.tipe_pegawai_id = '23' THEN
					'JFT Lainnya' ELSE'' 
				END AS tipe_pegawai_nama,
				P.nip_baru,
				\"numeric\" (
				SUBSTR( P.nip_baru, 9, 4 )) tmt_cpns,
			CASE
					
					WHEN P.status_pegawai_id = 1 
					AND ( \"numeric\" ( SUBSTR( P.nip_baru, 9, 4 )) < 2018 ) THEN
						'SK PNS belum diisi' ELSE'' 
						END AS cek_status_sk_pns,
					P.nama,
					P.gelar_depan,
					P.gelar_belakang,
					PR.pangkat_id AS pangkat_kp,
					TO_CHAR( PR.tmt_pangkat :: DATE, 'dd-mm-yyyy' ) AS tmt_kp,
					PR.jenis_riwayat AS jenis_kp,
					GR.pangkat_id AS pangkat_gaji,
					TO_CHAR( GR.tmt_sk :: DATE, 'dd-mm-yyyy' ) AS tmt_gaji,
					GR.jenis_kenaikan AS jenis_gaji,
				CASE
						
						WHEN PR.pangkat_id <> GR.pangkat_id THEN
						'Gol Riwayat Pangkat Terakhir dengan Gol Riwayat Gaji terakhir tidak sama' ELSE'' 
					END AS cek_pangkat_gaji,
					JR.tipe_pegawai_id AS tipe_jab,
					JR.eselon_id AS eselon_jab,
				CASE
						
						WHEN JR.eselon_id = '21' THEN
						'II.a' 
						WHEN JR.eselon_id = '22' THEN
						'II.b' 
						WHEN JR.eselon_id = '31' THEN
						'III.a' 
						WHEN JR.eselon_id = '32' THEN
						'III.b' 
						WHEN JR.eselon_id = '41' THEN
						'IV.a' 
						WHEN JR.eselon_id = '42' THEN
						'IV.b' ELSE'' 
					END AS eselon_nama,
					JR.nama AS nama_jab,
					TO_CHAR( JR.tmt_jabatan :: DATE, 'dd-mm-yyyy' ) AS tmt_jab,
					PENDRA.pendidikan_id AS pendik_akhir_id,
					PENDRA.pendidikan_jurusan_id AS pendik_akhir_jur_id,
					PENDRA.jurusan AS jurusan_akhir_nama,
					PENDRA.gelar_tipe AS gelar_akhir_tipe,
					PENDRA.gelar_nama AS gelar_akhir_belakang,
					PENDRA.gelar_depan AS gelar_akhir_depan,
				CASE
						
						WHEN PENDRA.pendidikan_id >= 4 
						AND PENDRA.pendidikan_jurusan_id IS NULL THEN
							'Jurusan belum terisi' ELSE'' 
							END AS cek_jurusan,
						SK.nama AS nama_satuan_kerja,
						ambil_satker_nama ( SK.satuan_kerja_induk_id ) AS satuan_kerja_induk,
						ambil_satker_nama ( SK.satuan_kerja_induk_upt ) AS satuan_kerja_upt,
						N.prestasi_hasil AS nilai_ppk,
					CASE
							
							WHEN N.prestasi_hasil IS NULL THEN
							'Nilai SKP/PPK belum ada' ELSE'' 
						END AS cek_ppk 
					FROM
						pegawai AS P
						LEFT JOIN pangkat_riwayat AS PR ON PR.pangkat_riwayat_id = P.pangkat_riwayat_id
						LEFT JOIN jabatan_riwayat AS JR ON JR.jabatan_riwayat_id = P.jabatan_riwayat_id
						LEFT JOIN gaji_riwayat AS GR ON GR.gaji_riwayat_id = P.gaji_riwayat_id
						LEFT JOIN pendidikan_riwayat AS PENDRA ON PENDRA.pendidikan_riwayat_id = P.pendidikan_riwayat_id
						LEFT JOIN satuan_kerja AS SK ON P.satuan_kerja_id = SK.satuan_kerja_id
						LEFT JOIN (
						SELECT A
							.pegawai_id,
							A.tahun,
							prestasi_hasil 
						FROM
							penilaian_skp A 
						WHERE
							1 = 1 
							AND A.tahun = '2019' 
							AND A.status IS NULL 
						) N ON P.pegawai_id = N.pegawai_id 
					WHERE
						P.status_pegawai_id IN ( 1, 2 ) 
					) A 
			WHERE
		1 =1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }

    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","MASTER_KATEGORI_METODE_EVALUASI_ID"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 

    function selectByParamsRekapCekDataRekon($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order='')
	{
		$str = "
		SELECT A
		.*,
		CASE
			
			WHEN ( cek_jurusan <> '' ) 
			OR ( cek_pangkat_gaji <> '' ) 
			OR ( cek_status_sk_pns <> '' ) 
			OR ( cek_ppk <> '' ) THEN
				'Bermasalah' ELSE'OK' 
			END AS hasil_cek 
		FROM
			(
			SELECT
				P.pegawai_id,
				P.satuan_kerja_id,
				P.status_pegawai_id,
			CASE
					
					WHEN P.status_pegawai_id = 1 THEN
					'CPNS' 
					WHEN P.status_pegawai_id = 2 THEN
					'PNS' ELSE'' 
				END AS status_nama,
				P.tipe_pegawai_id,
			CASE
					
					WHEN P.tipe_pegawai_id = '11' THEN
					'Struktural' 
					WHEN P.tipe_pegawai_id = '12' THEN
					'Pelaksana' 
					WHEN P.tipe_pegawai_id = '21' THEN
					'JFT Pendidikan' 
					WHEN P.tipe_pegawai_id = '22' THEN
					'JFT Kesehatan' 
					WHEN P.tipe_pegawai_id = '23' THEN
					'JFT Lainnya' ELSE'' 
				END AS tipe_pegawai_nama,
				P.nip_baru,
				\"numeric\" (
				SUBSTR( P.nip_baru, 9, 4 )) tmt_cpns,
			CASE
					
					WHEN P.status_pegawai_id = 1 
					AND ( \"numeric\" ( SUBSTR( P.nip_baru, 9, 4 )) < 2018 ) THEN
						'SK PNS belum diisi' ELSE'' 
						END AS cek_status_sk_pns,
					P.nama,
					P.gelar_depan,
					P.gelar_belakang,
					PR.pangkat_id AS pangkat_kp,
					TO_CHAR( PR.tmt_pangkat :: DATE, 'dd-mm-yyyy' ) AS tmt_kp,
					PR.jenis_riwayat AS jenis_kp,
					GR.pangkat_id AS pangkat_gaji,
					TO_CHAR( GR.tmt_sk :: DATE, 'dd-mm-yyyy' ) AS tmt_gaji,
					GR.jenis_kenaikan AS jenis_gaji,
				CASE
						
						WHEN PR.pangkat_id <> GR.pangkat_id THEN
						'Gol Riwayat Pangkat Terakhir dengan Gol Riwayat Gaji terakhir tidak sama' ELSE'' 
					END AS cek_pangkat_gaji,
					JR.tipe_pegawai_id AS tipe_jab,
					JR.eselon_id AS eselon_jab,
				CASE
						
						WHEN JR.eselon_id = '21' THEN
						'II.a' 
						WHEN JR.eselon_id = '22' THEN
						'II.b' 
						WHEN JR.eselon_id = '31' THEN
						'III.a' 
						WHEN JR.eselon_id = '32' THEN
						'III.b' 
						WHEN JR.eselon_id = '41' THEN
						'IV.a' 
						WHEN JR.eselon_id = '42' THEN
						'IV.b' ELSE'' 
					END AS eselon_nama,
					JR.nama AS nama_jab,
					TO_CHAR( JR.tmt_jabatan :: DATE, 'dd-mm-yyyy' ) AS tmt_jab,
					PENDRA.pendidikan_id AS pendik_akhir_id,
					PENDRA.pendidikan_jurusan_id AS pendik_akhir_jur_id,
					PENDRA.jurusan AS jurusan_akhir_nama,
					PENDRA.gelar_tipe AS gelar_akhir_tipe,
					PENDRA.gelar_nama AS gelar_akhir_belakang,
					PENDRA.gelar_depan AS gelar_akhir_depan,
				CASE
						
						WHEN PENDRA.pendidikan_id >= 4 
						AND PENDRA.pendidikan_jurusan_id IS NULL THEN
							'Jurusan belum diupdate' ELSE'' 
							END AS cek_jurusan,
						SK.nama AS nama_satuan_kerja,
						ambil_satker_nama ( SK.satuan_kerja_induk_id ) AS satuan_kerja_induk,
						ambil_satker_nama ( SK.satuan_kerja_induk_upt ) AS satuan_kerja_upt,
						N.prestasi_hasil AS nilai_ppk,
					CASE
							
							WHEN N.prestasi_hasil IS NULL THEN
							'Nilai SKP/PPK belum ada' ELSE'' 
						END AS cek_ppk 
					FROM
						pegawai AS P
						LEFT JOIN pangkat_riwayat AS PR ON PR.pangkat_riwayat_id = P.pangkat_riwayat_id
						LEFT JOIN jabatan_riwayat AS JR ON JR.jabatan_riwayat_id = P.jabatan_riwayat_id
						LEFT JOIN gaji_riwayat AS GR ON GR.gaji_riwayat_id = P.gaji_riwayat_id
						LEFT JOIN pendidikan_riwayat AS PENDRA ON PENDRA.pendidikan_riwayat_id = P.pendidikan_riwayat_id
						LEFT JOIN satuan_kerja AS SK ON P.satuan_kerja_id = SK.satuan_kerja_id
						LEFT JOIN (
						SELECT A
							.pegawai_id,
							A.tahun,
							prestasi_hasil 
						FROM
							penilaian_skp A 
						WHERE
							1 = 1 
							AND A.tahun = '2019' 
							AND A.status IS NULL 
						) N ON P.pegawai_id = N.pegawai_id 
					WHERE
						P.status_pegawai_id IN ( 1, 2 ) 
					) A 
			WHERE
		1 = 1 
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		return $this->selectLimit($str,$limit,$from); 
    }
	

    function getCountByParamsRekapCekDataRekon($paramsArray=array(), $statement='')
	{
		$str = "
	SELECT COUNT(1) AS ROWCOUNT
		FROM
			(
			SELECT
				P.pegawai_id,
				P.satuan_kerja_id,
				P.status_pegawai_id,
			CASE
					
					WHEN P.status_pegawai_id = 1 THEN
					'CPNS' 
					WHEN P.status_pegawai_id = 2 THEN
					'PNS' ELSE'' 
				END AS status_nama,
				P.tipe_pegawai_id,
			CASE
					
					WHEN P.tipe_pegawai_id = '11' THEN
					'Struktural' 
					WHEN P.tipe_pegawai_id = '12' THEN
					'Pelaksana' 
					WHEN P.tipe_pegawai_id = '21' THEN
					'JFT Pendidikan' 
					WHEN P.tipe_pegawai_id = '22' THEN
					'JFT Kesehatan' 
					WHEN P.tipe_pegawai_id = '23' THEN
					'JFT Lainnya' ELSE'' 
				END AS tipe_pegawai_nama,
				P.nip_baru,
				\"numeric\" (
				SUBSTR( P.nip_baru, 9, 4 )) tmt_cpns,
			CASE
					
					WHEN P.status_pegawai_id = 1 
					AND ( \"numeric\" ( SUBSTR( P.nip_baru, 9, 4 )) < 2018 ) THEN
						'SK PNS belum diisi' ELSE'' 
						END AS cek_status_sk_pns,
					P.nama,
					P.gelar_depan,
					P.gelar_belakang,
					PR.pangkat_id AS pangkat_kp,
					TO_CHAR( PR.tmt_pangkat :: DATE, 'dd-mm-yyyy' ) AS tmt_kp,
					PR.jenis_riwayat AS jenis_kp,
					GR.pangkat_id AS pangkat_gaji,
					TO_CHAR( GR.tmt_sk :: DATE, 'dd-mm-yyyy' ) AS tmt_gaji,
					GR.jenis_kenaikan AS jenis_gaji,
				CASE
						
						WHEN PR.pangkat_id <> GR.pangkat_id THEN
						'Gol Riwayat Pangkat Terakhir dengan Gol Riwayat Gaji terakhir tidak sama' ELSE'' 
					END AS cek_pangkat_gaji,
					JR.tipe_pegawai_id AS tipe_jab,
					JR.eselon_id AS eselon_jab,
				CASE
						
						WHEN JR.eselon_id = '21' THEN
						'II.a' 
						WHEN JR.eselon_id = '22' THEN
						'II.b' 
						WHEN JR.eselon_id = '31' THEN
						'III.a' 
						WHEN JR.eselon_id = '32' THEN
						'III.b' 
						WHEN JR.eselon_id = '41' THEN
						'IV.a' 
						WHEN JR.eselon_id = '42' THEN
						'IV.b' ELSE'' 
					END AS eselon_nama,
					JR.nama AS nama_jab,
					TO_CHAR( JR.tmt_jabatan :: DATE, 'dd-mm-yyyy' ) AS tmt_jab,
					PENDRA.pendidikan_id AS pendik_akhir_id,
					PENDRA.pendidikan_jurusan_id AS pendik_akhir_jur_id,
					PENDRA.jurusan AS jurusan_akhir_nama,
					PENDRA.gelar_tipe AS gelar_akhir_tipe,
					PENDRA.gelar_nama AS gelar_akhir_belakang,
					PENDRA.gelar_depan AS gelar_akhir_depan,
				CASE
						
						WHEN PENDRA.pendidikan_id >= 4 
						AND PENDRA.pendidikan_jurusan_id IS NULL THEN
							'Jurusan belum terisi' ELSE'' 
							END AS cek_jurusan,
						SK.nama AS nama_satuan_kerja,
						ambil_satker_nama ( SK.satuan_kerja_induk_id ) AS satuan_kerja_induk,
						ambil_satker_nama ( SK.satuan_kerja_induk_upt ) AS satuan_kerja_upt,
						N.prestasi_hasil AS nilai_ppk,
					CASE
							
							WHEN N.prestasi_hasil IS NULL THEN
							'Nilai SKP/PPK belum ada' ELSE'' 
						END AS cek_ppk 
					FROM
						pegawai AS P
						LEFT JOIN pangkat_riwayat AS PR ON PR.pangkat_riwayat_id = P.pangkat_riwayat_id
						LEFT JOIN jabatan_riwayat AS JR ON JR.jabatan_riwayat_id = P.jabatan_riwayat_id
						LEFT JOIN gaji_riwayat AS GR ON GR.gaji_riwayat_id = P.gaji_riwayat_id
						LEFT JOIN pendidikan_riwayat AS PENDRA ON PENDRA.pendidikan_riwayat_id = P.pendidikan_riwayat_id
						LEFT JOIN satuan_kerja AS SK ON P.satuan_kerja_id = SK.satuan_kerja_id
						LEFT JOIN (
						SELECT A
							.pegawai_id,
							A.tahun,
							prestasi_hasil 
						FROM
							penilaian_skp A 
						WHERE
							1 = 1 
							AND A.tahun = '2019' 
							AND A.status IS NULL 
						) N ON P.pegawai_id = N.pegawai_id 
					WHERE
						P.status_pegawai_id IN ( 1, 2 ) 
					) A 
			WHERE 1=1
		".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

// END BUAT CEK DATA REKON PNS


//copy dari selectByParamsCetakRekon modifikasi buat menu cek_data_rekon_email di menu Export // 20210323
	function selectByParamsCetakCekDataRekonEmail($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order='')
	{
		$str = "
			SELECT
				P.pegawai_id,
				P.satuan_kerja_id,
				P.status_pegawai_id,
				P.nip_baru,
				P.nama,
				P.keterangan_1,
				P.hp,
				SK.nama AS nama_satuan_kerja,
				ambil_satker_nama ( SK.satuan_kerja_induk_id ) AS satuan_kerja_induk,
				ambil_satker_nama ( SK.satuan_kerja_induk_upt ) AS satuan_kerja_upt
			FROM
				pegawai AS P
			LEFT JOIN satuan_kerja AS SK ON P.satuan_kerja_id = SK.satuan_kerja_id
			WHERE
				P.status_pegawai_id IN ( 1, 2 ) 
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }

    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","MASTER_KATEGORI_METODE_EVALUASI_ID"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 

    function selectByParamsRekapCekDataRekonEmail($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order='')
	{
		$str = "
			SELECT
				P.pegawai_id,
				P.satuan_kerja_id,
				P.status_pegawai_id,
				P.nip_baru,
				P.nama,
				P.keterangan_1,
				P.hp,
				SK.nama AS nama_satuan_kerja,
				ambil_satker_nama ( SK.satuan_kerja_induk_id ) AS satuan_kerja_induk,
				ambil_satker_nama ( SK.satuan_kerja_induk_upt ) AS satuan_kerja_upt
			FROM
				pegawai AS P
			LEFT JOIN satuan_kerja AS SK ON P.satuan_kerja_id = SK.satuan_kerja_id
			WHERE
				P.status_pegawai_id IN ( 1, 2 ) 

		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		return $this->selectLimit($str,$limit,$from); 
    }
	

    function getCountByParamsRekapCekDataRekonEmail($paramsArray=array(), $statement='')
	{
		$str = "
		SELECT COUNT(1) AS ROWCOUNT
			FROM
				(
					SELECT
						P.pegawai_id,
						P.satuan_kerja_id,
						P.status_pegawai_id,
						P.nip_baru,
						P.nama,
						P.keterangan_1,
						P.hp,
						SK.nama AS nama_satuan_kerja,
						ambil_satker_nama ( SK.satuan_kerja_induk_id ) AS satuan_kerja_induk,
						ambil_satker_nama ( SK.satuan_kerja_induk_upt ) AS satuan_kerja_upt
					FROM
						pegawai AS P
					LEFT JOIN satuan_kerja AS SK ON P.satuan_kerja_id = SK.satuan_kerja_id
					WHERE
						P.status_pegawai_id IN ( 1, 2 ) 
				) A 
			WHERE 1=1
		".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

// END BUAT CEK DATA REKON EMAIL



//copy dari selectByParamsCetakRekon modifikasi buat cek login pegawai // 20200804_1
	function selectByParamsCetakPegawaiLogin($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY SATUAN_KERJA ASC, X.WAKTU_LOGIN DESC')
	{
		$str = "
		SELECT
		P.NIP_BARU NIP_BARU,
		P.NAMA NAMA,
		AMBIL_SATKER_NAMA(P.SATUAN_KERJA_ID) SATUAN_KERJA,
		X.WAKTU_LOGIN WAKTU_LOGIN
		FROM PEGAWAI P
		LEFT JOIN 
		( 
		 SELECT PEGAWAI_ID, MAX(WAKTU_LOGIN) WAKTU_LOGIN FROM APP.USER_LOGIN_LOG WHERE WAKTU_LOGIN >= '2020-07-17 00:00:00' GROUP BY PEGAWAI_ID 
		) X ON P.PEGAWAI_ID = X.PEGAWAI_ID
		WHERE 1=1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }


    function getCountByParamsCetakPegawai($paramsArray=array(), $statement='')
	{
		$str = "
		SELECT COUNT(A.PEGAWAI_ID) AS ROWCOUNT 
		FROM PEGAWAI A
		LEFT JOIN
		(
			SELECT A.PEGAWAI_STATUS_ID, A.PEGAWAI_ID, A.STATUS_PEGAWAI_ID, B.NAMA PEGAWAI_STATUS_NAMA
			, A.TMT PEGAWAI_KEDUDUKAN_TMT, C.NAMA PEGAWAI_KEDUDUKAN_NAMA
			FROM PEGAWAI_STATUS A
			INNER JOIN STATUS_PEGAWAI B ON A.STATUS_PEGAWAI_ID = B.STATUS_PEGAWAI_ID
			INNER JOIN STATUS_PEGAWAI_KEDUDUKAN C ON A.STATUS_PEGAWAI_KEDUDUKAN_ID = C.STATUS_PEGAWAI_KEDUDUKAN_ID
		) PS ON A.PEGAWAI_STATUS_ID = PS.PEGAWAI_STATUS_ID
		LEFT JOIN
		(
			SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, A.PANGKAT_ID
			FROM PANGKAT_RIWAYAT A
			LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
		) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT A.JABATAN_RIWAYAT_ID, COALESCE(A.ESELON_ID,99) ESELON_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
			, A.JABATAN_FU_ID, A.JABATAN_FT_ID
			, COALESCE(ED.USIA_BUP, JFU.USIA_BUP, JFT.USIA_BUP) USIA_BUP
			FROM JABATAN_RIWAYAT A
			LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
			LEFT JOIN ESELON_DETIL ED ON ED.ESELON_ID = A.ESELON_ID AND ED.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(ED.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			LEFT JOIN JABATAN_FU_DETIL JFU ON JFU.JABATAN_FU_ID = A.JABATAN_FU_ID AND JFU.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFU.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
			LEFT JOIN JABATAN_FT_DETIL JFT ON JFT.JABATAN_FT_ID = A.JABATAN_FT_ID AND JFT.TANGGAL_AWAL <= CURRENT_DATE AND COALESCE(JFT.TANGGAL_AKHIR, CURRENT_DATE) >= CURRENT_DATE
		) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
		LEFT JOIN TIPE_PEGAWAI T ON CAST(A.TIPE_PEGAWAI_ID AS NUMERIC) = T.TIPE_PEGAWAI_ID
		LEFT JOIN AGAMA D ON A.AGAMA_ID = D.AGAMA_ID
		LEFT JOIN PENDIDIKAN_RIWAYAT_DATA F ON A.PENDIDIKAN_RIWAYAT_ID = F.PENDIDIKAN_RIWAYAT_ID
		WHERE 1=1 ".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

    function getCountByParams($paramsArray=array(), $statement='')
	{
		$str = "
				SELECT COUNT(A.PEGAWAI_ID) AS ROWCOUNT 
				FROM PEGAWAI A
				WHERE 1 = 1 ".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }
	
	function getCountByParamsMonitoring($paramsArray=array(), $statement='')
	{
		$str = "
				SELECT COUNT(A.PEGAWAI_ID) AS ROWCOUNT 
				FROM PEGAWAI A
				LEFT JOIN
				(
					SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT
					FROM PANGKAT_RIWAYAT A
					LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
				) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
				LEFT JOIN SATUAN_KERJA SK ON SK.SATUAN_KERJA_ID = A.SATUAN_KERJA_ID
				LEFT JOIN (SELECT PEGAWAI_ID, TANGGAL_MULAI, TANGGAL_AKHIR FROM HUKUMAN_TERAKHIR X) G ON A.PEGAWAI_ID = G.PEGAWAI_ID
				WHERE 1 = 1 ".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		// echo $str;exit();
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

    function checkpegawaisatuankerja($id,$satuankerja)
	{
		$str = "
		SELECT AMBIL_SATKER_ID_BATAS(SATUAN_KERJA_ID, ".$satuankerja.") ROWCOUNT
		FROM PEGAWAI
		WHERE PEGAWAI_ID = ".$id;
		// echo $str;exit();
		$this->query = $str;
		$this->select($str);
		$this->firstRow();
		$tempData= $this->getField("ROWCOUNT"); 

		$arrData= explode(",", $tempData);
		return $arrData;
    }

    function selectsimplepegawai($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT A.*
		FROM
		(
			SELECT 
				A.PEGAWAI_ID, A.NIP_LAMA, A.NIP_BARU
				, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
			FROM PEGAWAI A
			WHERE 1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." 
		) A
		WHERE 1=1 ".$order;
		// LEFT JOIN (SELECT PEGAWAI_ID, PATH FROM P_PEGAWAI_FILE_DATA('')) PF ON PF.PEGAWAI_ID = A.PEGAWAI_ID
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
    }

  } 
?>
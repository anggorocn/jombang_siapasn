<? 
/* *******************************************************************************************************
MODUL NAME 			: MTSN LAWANG
FILE NAME 			: 
AUTHOR				: 
VERSION				: 1.0
MODIFICATION DOC	:
DESCRIPTION			: 
***************************************************************************************************** */

  /***
  * Entity-base class untuk mengimplementasikan tabel kategori.
  * 
  ***/
  // include_once('Entity.php');
  include_once(APPPATH.'/models/Entity.php');
  
  class SuratMasukBkd extends Entity{ 

	 var $query;
  	var $id;
    /**
    * Class constructor.
    **/
    function SuratMasukBkd()
	{
      $this->Entity(); 
    }

	function insert()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$this->setField("SURAT_MASUK_BKD_ID", $this->getNextId("SURAT_MASUK_BKD_ID","PERSURATAN.SURAT_MASUK_BKD")); 

     	$str = "
     	INSERT INTO PERSURATAN.SURAT_MASUK_BKD 
     	(
	     	SURAT_MASUK_BKD_ID, JENIS_ID, NOMOR, NO_AGENDA, TANGGAL, KEPADA, PERIHAL
	     	, SATUAN_KERJA_TUJUAN_ID, SATUAN_KERJA_ASAL_ID, KATEGORI, PENGATURAN_KENAIKAN_PANGKAT_ID
	     	, JKM_NOMOR, JKM_TANGGAL
	    )
     	VALUES 
     	(
	     	".$this->getField("SURAT_MASUK_BKD_ID")."
	     	, ".$this->getField("JENIS_ID")."
	     	, '".$this->getField("NOMOR")."'
	     	, '".$this->getField("NO_AGENDA")."'
	     	, ".$this->getField("TANGGAL")."
	     	, '".$this->getField("KEPADA")."'
	     	, '".$this->getField("PERIHAL")."'
	     	, ".$this->getField("SATUAN_KERJA_TUJUAN_ID")."
	     	, ".$this->getField("SATUAN_KERJA_ASAL_ID")."
	     	, '".$this->getField("KATEGORI")."'
	     	, ".$this->getField("PENGATURAN_KENAIKAN_PANGKAT_ID")."
	     	, '".$this->getField("JKM_NOMOR")."'
	     	, ".$this->getField("JKM_TANGGAL")."
     	)
		"; 	
		$this->id = $this->getField("SURAT_MASUK_BKD_ID");
		$this->query = $str;
		// echo $str;exit;
		return $this->execQuery($str);
    }
	
	function insertSurat()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$this->setField("SURAT_MASUK_BKD_ID", $this->getNextId("SURAT_MASUK_BKD_ID","PERSURATAN.SURAT_MASUK_BKD")); 

     	$str = "
			INSERT INTO PERSURATAN.SURAT_MASUK_BKD (
				SURAT_MASUK_BKD_ID, JENIS_ID, NOMOR, NO_AGENDA, TANGGAL, KEPADA, PERIHAL, SATUAN_KERJA_TUJUAN_ID, SATUAN_KERJA_ASAL_ID, STATUS_KIRIM
				, IS_MANUAL, SATUAN_KERJA_ASAL_NAMA) 
			VALUES (
				 ".$this->getField("SURAT_MASUK_BKD_ID").",
				 ".$this->getField("JENIS_ID").",
				 '".$this->getField("NOMOR")."',
				 '".$this->getField("NO_AGENDA")."',
				 ".$this->getField("TANGGAL").",
				 '".$this->getField("KEPADA")."',
				 '".$this->getField("PERIHAL")."',
				 ".$this->getField("SATUAN_KERJA_TUJUAN_ID").",
				 ".$this->getField("SATUAN_KERJA_ASAL_ID")."
				 , 1
				 , ".$this->getField("IS_MANUAL")."
				 , ".$this->getField("SATUAN_KERJA_ASAL_NAMA")."
			)
		"; 	
		$this->id = $this->getField("SURAT_MASUK_BKD_ID");
		$this->query = $str;
		//echo $str;exit;

		if($this->execQuery($str))
		{

			$this->execQuery($str);

			// echo $this->execQuery($str);exit();
			
			$str1= "		
					UPDATE PERSURATAN.SURAT_MASUK_BKD_DISPOSISI
					SET
						SURAT_AWAL= 1, STATUS_POSISI_SURAT = 1
						, TANGGAL= ".$this->getField("TANGGAL_TERIMA")."
					WHERE  SURAT_MASUK_BKD_ID = ".$this->id." AND SURAT_MASUK_BKD_DISPOSISI_PARENT_ID != 0
					"; 
			$this->query = $str1;
			//echo $str1;exit;
			$this->execQuery($str1);
			
			$str1= "		
					UPDATE PERSURATAN.SURAT_MASUK_BKD_DISPOSISI
					SET
						TERBACA= 1
					WHERE  SURAT_MASUK_BKD_ID = ".$this->id."
					"; 
			$this->query = $str1;
			// echo $str1;exit;
			return $this->execQuery($str1);
		}
    }

    function update()
	{
		$str = "		
		UPDATE PERSURATAN.SURAT_MASUK_BKD
		SET
			JENIS_ID= ".$this->getField("JENIS_ID")."
			, NOMOR= '".$this->getField("NOMOR")."'
			, NO_AGENDA= '".$this->getField("NO_AGENDA")."'
			, TANGGAL= ".$this->getField("TANGGAL")."
			, KEPADA= '".$this->getField("KEPADA")."'
			, PERIHAL= '".$this->getField("PERIHAL")."'
			, SATUAN_KERJA_TUJUAN_ID= ".$this->getField("SATUAN_KERJA_TUJUAN_ID")."
			, SATUAN_KERJA_ASAL_ID= ".$this->getField("SATUAN_KERJA_ASAL_ID")."
			, JKM_NOMOR= '".$this->getField("JKM_NOMOR")."'
			, JKM_TANGGAL= ".$this->getField("JKM_TANGGAL")."
		WHERE SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
		"; 
		$this->query = $str;
		// echo $str;exit;
		return $this->execQuery($str);
    }
	
	function updateKirim()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$str = "		
				UPDATE PERSURATAN.SURAT_MASUK_BKD
				SET
					STATUS_KIRIM= ".$this->getField("STATUS_KIRIM")."
				WHERE  SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
				"; 
		$this->query = $str;
		//echo $str;exit;
		return $this->execQuery($str);
    }
	
	function updatePerihalKirim()
	{
		/*Auto-generate primary key(s) by next max value (integer) */
		$str = "		
				UPDATE PERSURATAN.SURAT_MASUK_BKD
				SET
					STATUS_KIRIM= ".$this->getField("STATUS_KIRIM").",
					PERIHAL= '".$this->getField("PERIHAL")."'
				WHERE  SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
				"; 
		$this->query = $str;
		//echo $str;exit;
		return $this->execQuery($str);
    }
	
	function deletedata()
	{
		$str1= "
				DELETE FROM persuratan.SURAT_MASUK_BKD_DISPOSISI
				WHERE SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
				";
		$this->query = $str1;
		$this->execQuery($str1);

        $str = "
				DELETE FROM persuratan.SURAT_MASUK_BKD
				WHERE SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
				";
		$this->query = $str;
		return $this->execQuery($str);
    }

	function delete()
	{
		$str0= "
				UPDATE PERSURATAN.SURAT_MASUK_PEGAWAI
				SET
					SURAT_MASUK_BKD_ID= NULL,
					STATUS_BERKAS= ".$this->getField("STATUS_BERKAS").",
					LAST_USER= '".$this->getField("LAST_USER")."',
					LAST_DATE= ".$this->getField("LAST_DATE")."
				WHERE SURAT_MASUK_UPT_ID IS NOT NULL AND SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
				"; 
		$this->query = $str0;
		//echo $str0;exit;
		$this->execQuery($str0);
		
		$str1= "
				DELETE FROM PERSURATAN.SURAT_MASUK_PEGAWAI_LOG
				WHERE SURAT_MASUK_UPT_ID IS NULL AND SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
				";
		$this->query = $str1;
		$this->execQuery($str1);
		//echo $str1;exit;
		
		$str2= "
				DELETE FROM PERSURATAN.SURAT_MASUK_PEGAWAI
				WHERE SURAT_MASUK_UPT_ID IS NULL AND SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
				";
		$this->query = $str2;
		$this->execQuery($str2);
		
        $str = "
				DELETE FROM PERSURATAN.SURAT_MASUK_BKD
				WHERE SURAT_MASUK_BKD_ID = ".$this->getField("SURAT_MASUK_BKD_ID")."
				";
		$this->query = $str;
		return $this->execQuery($str);
    }

    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","MASTER_KATEGORI_METODE_EVALUASI_ID"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 

    function selectByParamsSimple($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.SURAT_MASUK_BKD_ID ASC')
	{
		$str = "
		SELECT 
			A.*
		FROM PERSURATAN.SURAT_MASUK_BKD A
		WHERE 1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		return $this->selectLimit($str,$limit,$from); 
		
    }

    function selectByParams($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.SURAT_MASUK_BKD_ID ASC')
	{
		// SELECT SURAT_MASUK_BKD_DISPOSISI_ID, SATUAN_KERJA_ASAL_ID, POSISI_TEKNIS FROM persuratan.SURAT_MASUK_BKD_DISPOSISI
		// ) PD ON PD.SURAT_MASUK_BKD_DISPOSISI_ID = persuratan.AMBIL_SATKER_POSISI_ID_SURAT(A.SURAT_MASUK_BKD_ID, A.JENIS_ID)
		$str = "
		SELECT
			B.NAMA SATUAN_KERJA_ASAL_USUL_NAMA, C.NAMA SATUAN_KERJA_TUJUAN_NAMA
			, COALESCE(TPU.JUMLAH_PEGAWAI,0) TOTAL_PEGAWAI, COALESCE(TPPU.JUMLAH_PEGAWAI,0) TOTAL_PEGAWAI_PROGRES
			, COALESCE(TPKU.JUMLAH_PEGAWAI,0) TOTAL_PEGAWAI_KEMBALI, PBKD.INFO_PROSES POSISI_TERAKHIRBAK1
			,
			CASE WHEN PD.POSISI_TEKNIS = 1 THEN
				AMBIL_SATKER_NAMA(PD.SATUAN_KERJA_ASAL_ID)
			ELSE
				PBKD.INFO_PROSES
			END POSISI_TERAKHIR
			, A.KATEGORI, CASE WHEN A.KATEGORI = 'bup' AND A.JENIS_ID = 7 THEN 'Pensiun BUP' WHEN A.KATEGORI = 'meninggal' AND A.JENIS_ID = 7 THEN 'Pensiun Janda/Duda' WHEN A.KATEGORI = 'dini' AND A.JENIS_ID = 7 THEN 'Pensiun APS(Dini)' WHEN A.KATEGORI = 'udzur' AND A.JENIS_ID = 7 THEN 'Pensiun Udzur' END KATEGORI_NAMA
			, PKP.TANGGAL_PERIODE PENGATURAN_KENAIKAN_PANGKAT_TANGGAL_PERIODE
			, A.*
		FROM persuratan.SURAT_MASUK_BKD A
		LEFT JOIN 
		( 
			SELECT *
			FROM
			(
				SELECT SURAT_MASUK_BKD_DISPOSISI_ID POSISI_ID_SURAT, SURAT_MASUK_BKD_ID, ID_POSISI_SURAT, ID_POSISI_SURAT_BACA
				FROM persuratan.SURAT_MASUK_BKD_DISPOSISI_POSISI A
			) A
			INNER JOIN 
			(
				SELECT SURAT_MASUK_BKD_ID SURAT_MASUK_BKD_ID_ALIAS, SURAT_MASUK_BKD_DISPOSISI_ID, SATUAN_KERJA_ASAL_ID, POSISI_TEKNIS
				FROM persuratan.SURAT_MASUK_BKD_DISPOSISI
			) B ON POSISI_ID_SURAT = SURAT_MASUK_BKD_DISPOSISI_ID
		) PD ON PD.SURAT_MASUK_BKD_ID = A.SURAT_MASUK_BKD_ID
		LEFT JOIN SATUAN_KERJA B ON A.SATUAN_KERJA_ASAL_ID = B.SATUAN_KERJA_ID
		LEFT JOIN SATUAN_KERJA C ON A.SATUAN_KERJA_TUJUAN_ID = C.SATUAN_KERJA_ID
		LEFT JOIN persuratan.TOTAL_PEGAWAI_BKD TPU ON A.SURAT_MASUK_BKD_ID = TPU.SURAT_MASUK_BKD_ID
		LEFT JOIN persuratan.TOTAL_PEGAWAI_PROGRES_BKD TPPU ON A.SURAT_MASUK_BKD_ID = TPPU.SURAT_MASUK_BKD_ID
		LEFT JOIN persuratan.TOTAL_PEGAWAI_KEMBALI_BKD TPKU ON A.SURAT_MASUK_BKD_ID = TPKU.SURAT_MASUK_BKD_ID
		LEFT JOIN 
		(
			SELECT
			A.JENIS_ID, A.SURAT_MASUK_BKD_ID
			, A.SATUAN_KERJA_ID, A.LAST_USER, A.LAST_DATE
			, CONCAT(A.INFO_LOG, ' ', ambil_satker_nama(A.SATUAN_KERJA_ID)) INFO_PROSES
			FROM persuratan.SURAT_MASUK_PEGAWAI_LOG A
			INNER JOIN
			(
			SELECT SURAT_MASUK_BKD_ID, JENIS_ID, MAX(LAST_DATE) LAST_DATE
			FROM persuratan.SURAT_MASUK_PEGAWAI_LOG
			WHERE SURAT_MASUK_BKD_ID IS NOT NULL
			GROUP BY SURAT_MASUK_BKD_ID, JENIS_ID
			) B ON A.JENIS_ID = B.JENIS_ID AND A.SURAT_MASUK_BKD_ID = B.SURAT_MASUK_BKD_ID AND A.LAST_DATE = B.LAST_DATE
			GROUP BY A.JENIS_ID, A.SURAT_MASUK_BKD_ID
			, A.SATUAN_KERJA_ID, A.LAST_USER, A.LAST_DATE
			, CONCAT(A.INFO_LOG, ' ', ambil_satker_nama(A.SATUAN_KERJA_ID))
		) PBKD ON A.JENIS_ID = PBKD.JENIS_ID AND A.SURAT_MASUK_BKD_ID = PBKD.SURAT_MASUK_BKD_ID
		LEFT JOIN pengaturan_kenaikan_pangkat PKP ON A.PENGATURAN_KENAIKAN_PANGKAT_ID = PKP.PENGATURAN_KENAIKAN_PANGKAT_ID
		WHERE 1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		// echo $str;exit();
		return $this->selectLimit($str,$limit,$from); 
		
    }
	
	function selectByParamsCetakPengantarSatuOrang($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY A.PEGAWAI_ID ASC')
	{
		$str = "
		SELECT 
			A.NAMA, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
			, A.NIP_BARU, A.JENIS_KELAMIN, A.TANGGAL_LAHIR, A.TEMPAT_LAHIR
			, AMBIL_ALAMAT_PEGAWAI(A.PEGAWAI_ID) ALAMAT, COALESCE(SMP.TMT_PENSIUN, P.TMT) PENSIUN_TMT
			, CASE WHEN JENIS_KELAMIN = 'L' THEN 'Karis' ELSE 'Karsu' END JENIS_KARIS_KARSU
			, CASE WHEN JENIS_KELAMIN = 'L' THEN 'Istri' ELSE 'Suami' END JENIS_NAMA_KARIS_KARSU
			, PANG_RIW.NAMA PANGKAT_RIWAYAT_NAMA, PANG_RIW.KODE PANGKAT_RIWAYAT_KODE, PANG_RIW.TMT_PANGKAT PANGKAT_RIWAYAT_TMT
			, JAB_RIW.JABATAN_NAMA JABATAN_RIWAYAT_NAMA
			, SMU.SATUAN_KERJA_ASAL_ID
			, SMU.NOMOR, SMU.TANGGAL, SMU.KEPADA, SMU.PERIHAL, AMBIL_SATKER_NAMA(SMU.SATUAN_KERJA_ASAL_ID) SATUAN_KERJA_PENGIRIM
			, AMBIL_SATKER_JABATAN(SMU.SATUAN_KERJA_ASAL_ID) SATUAN_KERJA_PENGIRIM_KEPALA, AMBIL_SATKER_NAMA_DYNAMIC(A.SATUAN_KERJA_ID) SATUAN_KERJA_DETIL, AMBIL_SATKER_NAMA_DETIL(A.SATUAN_KERJA_ID) SATUAN_KERJA_DETIL1
			, AMBIL_SATKER_INDUK(A.SATUAN_KERJA_ID) SATUAN_KERJA_INDUK
			, PEN_RIW.PENDIDIKAN_NAMA PENDIDIKAN_NAMA, PEN_RIW.JURUSAN JURUSAN
			, PEN_US_RIW.PENDIDIKAN_ID PENDIDIKAN_ID_US, PEN_US_RIW.PENDIDIKAN_NAMA PENDIDIKAN_NAMA_US, PEN_US_RIW.NAMA_FAKULTAS NAMA_FAKULTAS_US, PEN_US_RIW.JURUSAN JURUSAN_US, PEN_US_RIW.NAMA_SEKOLAH NAMA_SEKOLAH_US, PEN_US_RIW.TEMPAT TEMPAT_US
			, PUS.JUMLAH_USULAN_PEGAWAI
			, CASE WHEN COALESCE(NULLIF(SKU.NOMOR,'') , NULL ) IS NULL THEN CONCAT(B.KODE,'/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/', TTD1.NO_NOMENKLATUR_KAB,'.', TTD1.NO_NOMENKLATUR_BKD,'/',TO_CHAR(CURRENT_DATE, 'YYYY')) ELSE SKU.NOMOR END NOMOR_SURAT_KELUAR
			, COALESCE(SKU.TANGGAL, CURRENT_DATE) TANGGAL_SURAT_KELUAR1
			, SKU.TANGGAL TANGGAL_SURAT_KELUAR
			, SMP.JENIS_ID, SMP.SURAT_MASUK_BKD_ID, SMP.SURAT_MASUK_UPT_ID, SMP.PEGAWAI_ID
			, AMBIL_SATKER_NAMA_DYNAMIC(SMP.SATUAN_KERJA_PEGAWAI_USULAN_ID) SATUAN_KERJA_PEGAWAI_SURAT_KELUAR
			, CONCAT((CASE WHEN COALESCE(NULLIF(COALESCE(TTD.PLT_JABATAN,TTD1.PLT_JABATAN),'') , NULL ) IS NULL THEN '' ELSE 'PLT. ' END), COALESCE(TTD.NAMA,TTD1.NAMA)) TTD_SATUAN_KERJA
			, COALESCE(TTD1.NAMA_PEJABAT,TTD.NAMA_PEJABAT) TTD_NAMA_PEJABAT, COALESCE(TTD1.PANGKAT,TTD.PANGKAT) TTD_PANGKAT, COALESCE(TTD1.NIP,TTD.NIP) TTD_NIP, COALESCE(TTD1.NAMA,TTD.NAMA) TTD_NAMA
			, KPG_RIW.JENIS_KARPEG, KPG_RIW.NO_SURAT_KEHILANGAN, KPG_RIW.TANGGAL_SURAT_KEHILANGAN, KPG_RIW.KETERANGAN
			, KARS_RIW.JENIS_KARSU
			, KARS_RIW.SURAT_MASUK_KARSU_ID, KARS_RIW.NO_SURAT_KEHILANGAN_KARSU, KARS_RIW.TANGGAL_SURAT_KEHILANGAN_KARSU
			, KARS_RIW.KETERANGAN_KARSU, KARS_RIW.JENIS_KESALAHAN, KARS_RIW.TERTULIS, KARS_RIW.SEHARUSNYA, SMU.KATEGORI KATEGORI
			,
			CASE SMU.KATEGORI
			WHEN 'bup' THEN 'BUP' WHEN 'meninggal' THEN 'Janda / Duda'
			WHEN 'dini' THEN 'Atas Permintaan Sendiri' WHEN 'udzur' THEN 'Tidak Cakap Jasmani/Rohani'
			ELSE ''
			END KATEGORI_INFO
			, CASE SMP.KP_JENIS
			WHEN 'kpreguler' THEN 'KP Reguler'
			WHEN 'kpstruktural' THEN 'KP Pilihan (Jabatan Struktural)'
			WHEN 'kpjft' THEN 'KP Pilihan (Jabatan Fungsional Tertentu)'
			WHEN 'kppi' THEN 'KP Pilihan (Penyesuian Ijazah)'
			WHEN 'kpbtugas' THEN 'KP Pilihan (Sedang Melaksanakan Tugas)'
			WHEN 'kpstugas' THEN 'KP Pilihan (Setelah Selesai Tugas Belajar)'
			END KP_JENIS_NAMA
			, PS.NAMA USULAN_PANGKAT_RIWAYAT_NAMA, PS.KODE USULAN_PANGKAT_RIWAYAT_KODE, SMU.TANGGAL_PERIODE_KP USULAN_PANGKAT_RIWAYAT_TMT
		FROM PEGAWAI A
		INNER JOIN persuratan.SURAT_MASUK_PEGAWAI SMP ON A.PEGAWAI_ID = SMP.PEGAWAI_ID
		INNER JOIN 
		(
			SELECT A.*, TANGGAL_PERIODE TANGGAL_PERIODE_KP FROM PERSURATAN.SURAT_MASUK_BKD A
			LEFT JOIN PENGATURAN_KENAIKAN_PANGKAT B ON A.PENGATURAN_KENAIKAN_PANGKAT_ID = B.PENGATURAN_KENAIKAN_PANGKAT_ID
		) SMU ON SMU.SURAT_MASUK_BKD_ID = SMP.SURAT_MASUK_BKD_ID
		LEFT JOIN PANGKAT PS ON PS.PANGKAT_ID = SMP.KP_PANGKAT_ID
		LEFT JOIN persuratan.SURAT_KELUAR_BKD SKU ON SKU.SURAT_MASUK_PEGAWAI_ID = SMP.SURAT_MASUK_PEGAWAI_ID
		LEFT JOIN persuratan.KLASIFIKASI B ON SKU.KLASIFIKASI_ID = B.KLASIFIKASI_ID
		LEFT JOIN TANDA_TANGAN_BKD TTD ON SKU.TANDA_TANGAN_BKD_ID = TTD.TANDA_TANGAN_BKD_ID
		LEFT JOIN
		(
			SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, B.NAMA
			FROM PANGKAT_RIWAYAT A
			LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
		) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT A.JABATAN_RIWAYAT_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
			FROM JABATAN_RIWAYAT A
			LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
		) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT SURAT_MASUK_KARPEG_ID, JENIS_ID, JENIS_KARPEG, SURAT_MASUK_BKD_ID, SURAT_MASUK_UPT_ID, 
				PEGAWAI_ID, NO_SURAT_KEHILANGAN, TANGGAL_SURAT_KEHILANGAN, KETERANGAN
			FROM persuratan.SURAT_MASUK_KARPEG A
		) KPG_RIW ON SMP.SURAT_MASUK_KARPEG_ID = KPG_RIW.SURAT_MASUK_KARPEG_ID
		LEFT JOIN
		(
			SELECT SURAT_MASUK_KARSU_ID, JENIS_KARSU, NO_SURAT_KEHILANGAN NO_SURAT_KEHILANGAN_KARSU, TANGGAL_SURAT_KEHILANGAN TANGGAL_SURAT_KEHILANGAN_KARSU, KETERANGAN KETERANGAN_KARSU
			, JENIS_KESALAHAN, TERTULIS, SEHARUSNYA
			FROM persuratan.SURAT_MASUK_KARSU A
		) KARS_RIW ON SMP.SURAT_MASUK_KARSU_ID = KARS_RIW.SURAT_MASUK_KARSU_ID
		LEFT JOIN
		(
			SELECT 	
				A.PENDIDIKAN_RIWAYAT_ID, A.PENDIDIKAN_ID, C.NAMA PENDIDIKAN_NAMA
				, CASE A.STATUS_PENDIDIKAN
				WHEN '1' THEN 'Pendidikan CPNS'
				WHEN '2' THEN 'Diakui'
				WHEN '3' THEN 'Belum Diakui'
				WHEN '4' THEN 'Riwayat'
				WHEN '5' THEN 'Ijin belajar'
				WHEN '6' THEN 'Tugas Belajar'
				ELSE '-' END STATUS_PENDIDIKAN_NAMA, A.PENDIDIKAN_JURUSAN_ID, A.JURUSAN, A.NAMA NAMA_SEKOLAH
			FROM PENDIDIKAN_RIWAYAT A
			LEFT JOIN PENDIDIKAN_JURUSAN B ON A.PENDIDIKAN_JURUSAN_ID = B.PENDIDIKAN_JURUSAN_ID
			LEFT JOIN PENDIDIKAN C ON A.PENDIDIKAN_ID = C.PENDIDIKAN_ID
			WHERE 1 = 1
		) PEN_RIW ON SMP.PENDIDIKAN_RIWAYAT_AKHIR_ID = PEN_RIW.PENDIDIKAN_RIWAYAT_ID
		LEFT JOIN
		(
			SELECT 	
				A.PENDIDIKAN_RIWAYAT_ID, A.PENDIDIKAN_ID, C.NAMA PENDIDIKAN_NAMA
				, CASE A.STATUS_PENDIDIKAN
				WHEN '1' THEN 'Pendidikan CPNS'
				WHEN '2' THEN 'Diakui'
				WHEN '3' THEN 'Belum Diakui'
				WHEN '4' THEN 'Riwayat'
				WHEN '5' THEN 'Ijin belajar'
				WHEN '6' THEN 'Tugas Belajar'
				ELSE '-' END STATUS_PENDIDIKAN_NAMA, A.PENDIDIKAN_JURUSAN_ID, A.JURUSAN, A.NAMA NAMA_SEKOLAH, A.NAMA_FAKULTAS, A.TEMPAT
			FROM PENDIDIKAN_RIWAYAT A
			LEFT JOIN PENDIDIKAN_JURUSAN B ON A.PENDIDIKAN_JURUSAN_ID = B.PENDIDIKAN_JURUSAN_ID
			LEFT JOIN PENDIDIKAN C ON A.PENDIDIKAN_ID = C.PENDIDIKAN_ID
			WHERE 1 = 1
		) PEN_US_RIW ON SMP.PENDIDIKAN_RIWAYAT_SEKARANG_ID = PEN_US_RIW.PENDIDIKAN_RIWAYAT_ID
		LEFT JOIN SATUAN_KERJA SK ON SK.SATUAN_KERJA_ID = A.SATUAN_KERJA_ID
		LEFT JOIN
		(
			SELECT SMP.SURAT_MASUK_BKD_ID, SMP.JENIS_ID, COUNT(SMP.PEGAWAI_ID) JUMLAH_USULAN_PEGAWAI
			FROM persuratan.SURAT_MASUK_PEGAWAI SMP
			WHERE 1 = 1
			GROUP BY SMP.SURAT_MASUK_BKD_ID, SMP.JENIS_ID
		) PUS ON SMP.SURAT_MASUK_BKD_ID = PUS.SURAT_MASUK_BKD_ID
		LEFT JOIN PENSIUN P ON A.PEGAWAI_ID = P.PEGAWAI_ID AND SMP.KATEGORI = P.JENIS
		LEFT JOIN
		(
			SELECT 
			TANDA_TANGAN_BKD_ID, MULAI_BERLAKU, AKHIR_BERLAKU, NO_NOMENKLATUR_KAB, 
			NO_NOMENKLATUR_BKD, NAMA, PLT_JABATAN, NAMA_PEJABAT, PANGKAT_ID, 
			KODE_PANGKAT, PANGKAT, NIP, PEJABAT_PENETAP
			FROM TANDA_TANGAN_BKD A
			WHERE 1 = 1
		) TTD1 ON TTD1.TANDA_TANGAN_BKD_ID = (SELECT AMBIL_TANDA_TANGAN_BKD_TGL(COALESCE(SKU.TANGGAL, CURRENT_DATE)))
		WHERE 1 = 1
		"; 

		/*, (
			SELECT 
			TANDA_TANGAN_BKD_ID, MULAI_BERLAKU, AKHIR_BERLAKU, NO_NOMENKLATUR_KAB, 
			NO_NOMENKLATUR_BKD, NAMA, PLT_JABATAN, NAMA_PEJABAT, PANGKAT_ID, 
			KODE_PANGKAT, PANGKAT, NIP, PEJABAT_PENETAP
			FROM TANDA_TANGAN_BKD A
			WHERE 1 = 1
			AND A.TANDA_TANGAN_BKD_ID = (SELECT AMBIL_TANDA_TANGAN_BKD_TGL(CURRENT_DATE))
		) TTD1*/
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }
	
	function selectByParamsCetakPengantarSatuOrangUsulan($paramsArray=array(),$limit=-1,$from=-1, $statement='',$order=' ORDER BY SMP.USULAN_SURAT_ID ASC')
	{
		$str = "
				SELECT 
					A.NAMA, (CASE WHEN COALESCE(NULLIF(A.GELAR_DEPAN,'') , NULL ) IS NULL THEN '' ELSE A.GELAR_DEPAN || ' ' END) || A.NAMA || (CASE WHEN COALESCE(NULLIF(A.GELAR_BELAKANG,'') , NULL ) IS NULL THEN '' ELSE '' || A.GELAR_BELAKANG END) NAMA_LENGKAP
					, A.NIP_BARU, A.TEMPAT_LAHIR, A.TANGGAL_LAHIR, A.JENIS_KELAMIN
					, PANG_RIW.NAMA PANGKAT_RIWAYAT_NAMA, PANG_RIW.KODE PANGKAT_RIWAYAT_KODE, PANG_RIW.TMT_PANGKAT PANGKAT_RIWAYAT_TMT
					, JAB_RIW.JABATAN_NAMA JABATAN_RIWAYAT_NAMA
					, CASE WHEN JENIS_KELAMIN = 'L' THEN 'Karis' ELSE 'Karsu' END JENIS_KARIS_KARSU
					, CASE WHEN JENIS_KELAMIN = 'L' THEN 'Istri' ELSE 'Suami' END JENIS_NAMA_KARIS_KARSU
					, SMU.SATUAN_KERJA_ASAL_ID
					, SMU.NOMOR, SMU.TANGGAL, SMU.KEPADA, AMBIL_SATKER_NAMA(SMU.SATUAN_KERJA_ASAL_ID) SATUAN_KERJA_PENGIRIM
					, AMBIL_SATKER_JABATAN(SMU.SATUAN_KERJA_ASAL_ID) SATUAN_KERJA_PENGIRIM_KEPALA, AMBIL_SATKER_NAMA_DYNAMIC(A.SATUAN_KERJA_ID) SATUAN_KERJA_DETIL
					, AMBIL_SATKER_NAMA_DETIL(A.SATUAN_KERJA_ID) SATUAN_KERJA_DETIL1
					, AMBIL_SATKER_INDUK(A.SATUAN_KERJA_ID) SATUAN_KERJA_INDUK
					, PEN_RIW.PENDIDIKAN_NAMA PENDIDIKAN_NAMA, PEN_RIW.JURUSAN JURUSAN
					, PEN_US_RIW.PENDIDIKAN_NAMA PENDIDIKAN_NAMA_US, PEN_US_RIW.NAMA_FAKULTAS NAMA_FAKULTAS_US, PEN_US_RIW.JURUSAN JURUSAN_US, PEN_US_RIW.NAMA_SEKOLAH NAMA_SEKOLAH_US, PEN_US_RIW.TEMPAT TEMPAT_US
					, PUS.JUMLAH_USULAN_PEGAWAI
					, US.JUMLAH_USULAN_KANREG_PEGAWAI
					, CASE WHEN COALESCE(NULLIF(SKU.NOMOR,'') , NULL ) IS NULL THEN CONCAT(B.KODE,'/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/', TTD1.NO_NOMENKLATUR_KAB,'.', TTD1.NO_NOMENKLATUR_BKD,'/',TO_CHAR(CURRENT_DATE, 'YYYY')) ELSE SKU.NOMOR END NOMOR_SURAT_KELUAR
					, CASE WHEN COALESCE(NULLIF(SKU.NOMOR,'') , NULL ) IS NULL THEN NOMOR_USULAN ELSE SKU.NOMOR END NOMOR_SURAT_KELUAR_USULAN
					, COALESCE(SKU.TANGGAL, CURRENT_DATE) TANGGAL_SURAT_KELUAR1
					, COALESCE(SKU.TANGGAL, TANGGAL_DIBUAT_USULAN) TANGGAL_SURAT_KELUAR_USULAN
					, SKU.TANGGAL TANGGAL_SURAT_KELUAR
					, SMP.JENIS_ID, SMP.SURAT_MASUK_BKD_ID, SMP.SURAT_MASUK_UPT_ID, SMP.PEGAWAI_ID
					, AMBIL_SATKER_NAMA_DYNAMIC(SMP.SATUAN_KERJA_PEGAWAI_USULAN_ID) SATUAN_KERJA_PEGAWAI_SURAT_KELUAR
					, CONCAT((CASE WHEN COALESCE(NULLIF(COALESCE(TTD.PLT_JABATAN,TTD1.PLT_JABATAN),'') , NULL ) IS NULL THEN '' ELSE 'PLT. ' END), COALESCE(TTD.NAMA,TTD1.NAMA)) TTD_SATUAN_KERJA
					, COALESCE(TTD.NAMA_PEJABAT,TTD1.NAMA_PEJABAT) TTD_NAMA_PEJABAT, COALESCE(TTD.PANGKAT,TTD1.PANGKAT) TTD_PANGKAT, COALESCE(TTD.NIP,TTD1.NIP) TTD_NIP
					, KPG_RIW.JENIS_KARPEG, KPG_RIW.NO_SURAT_KEHILANGAN, KPG_RIW.TANGGAL_SURAT_KEHILANGAN, KPG_RIW.KETERANGAN
					, KARS_RIW.JENIS_KARSU
					, KARS_RIW.SURAT_MASUK_KARSU_ID, KARS_RIW.NO_SURAT_KEHILANGAN_KARSU, KARS_RIW.TANGGAL_SURAT_KEHILANGAN_KARSU
					, KARS_RIW.KETERANGAN_KARSU, KARS_RIW.JENIS_KESALAHAN, KARS_RIW.TERTULIS, KARS_RIW.SEHARUSNYA
				FROM PEGAWAI A
				INNER JOIN persuratan.SURAT_MASUK_PEGAWAI SMP ON A.PEGAWAI_ID = SMP.PEGAWAI_ID
				LEFT JOIN
				(
					SELECT USULAN_SURAT_ID, NOMOR NOMOR_USULAN, TO_DATE(TO_CHAR(TANGGAL_DIBUAT, 'YYYY-MM-DD'), 'YYYY-MM-DD') TANGGAL_DIBUAT_USULAN
					FROM persuratan.USULAN_SURAT
				) UST ON UST.USULAN_SURAT_ID = SMP.USULAN_SURAT_ID
				INNER JOIN persuratan.SURAT_MASUK_BKD SMU ON SMU.SURAT_MASUK_BKD_ID = SMP.SURAT_MASUK_BKD_ID
				LEFT JOIN persuratan.SURAT_KELUAR_BKD SKU ON SKU.USULAN_SURAT_ID = SMP.USULAN_SURAT_ID
				LEFT JOIN persuratan.KLASIFIKASI B ON SKU.KLASIFIKASI_ID = B.KLASIFIKASI_ID
				LEFT JOIN TANDA_TANGAN_BKD TTD ON SKU.TANDA_TANGAN_BKD_ID = TTD.TANDA_TANGAN_BKD_ID
				LEFT JOIN
				(
					SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, B.NAMA
					FROM PANGKAT_RIWAYAT A
					LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
				) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
				LEFT JOIN
				(
					SELECT A.JABATAN_RIWAYAT_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
					FROM JABATAN_RIWAYAT A
					LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
				) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
				LEFT JOIN
				(
					SELECT SURAT_MASUK_KARPEG_ID, JENIS_ID, JENIS_KARPEG, SURAT_MASUK_BKD_ID, SURAT_MASUK_UPT_ID, 
						PEGAWAI_ID, NO_SURAT_KEHILANGAN, TANGGAL_SURAT_KEHILANGAN, KETERANGAN
					FROM persuratan.SURAT_MASUK_KARPEG A
				) KPG_RIW ON SMP.SURAT_MASUK_KARPEG_ID = KPG_RIW.SURAT_MASUK_KARPEG_ID
				LEFT JOIN
				(
					SELECT SURAT_MASUK_KARSU_ID, NO_SURAT_KEHILANGAN NO_SURAT_KEHILANGAN_KARSU, TANGGAL_SURAT_KEHILANGAN TANGGAL_SURAT_KEHILANGAN_KARSU, KETERANGAN KETERANGAN_KARSU
					, JENIS_KESALAHAN, TERTULIS, SEHARUSNYA, JENIS_KARSU
					FROM persuratan.SURAT_MASUK_KARSU A
				) KARS_RIW ON SMP.SURAT_MASUK_KARSU_ID = KARS_RIW.SURAT_MASUK_KARSU_ID
				LEFT JOIN
				(
					SELECT 	
						A.PENDIDIKAN_RIWAYAT_ID, A.PENDIDIKAN_ID, C.NAMA PENDIDIKAN_NAMA
						, CASE A.STATUS_PENDIDIKAN
						WHEN '1' THEN 'Pendidikan CPNS'
						WHEN '2' THEN 'Diakui'
						WHEN '3' THEN 'Belum Diakui'
						WHEN '4' THEN 'Riwayat'
						WHEN '5' THEN 'Ijin belajar'
						WHEN '6' THEN 'Tugas Belajar'
						ELSE '-' END STATUS_PENDIDIKAN_NAMA, A.PENDIDIKAN_JURUSAN_ID, A.JURUSAN, A.NAMA NAMA_SEKOLAH
					FROM PENDIDIKAN_RIWAYAT A
					LEFT JOIN PENDIDIKAN_JURUSAN B ON A.PENDIDIKAN_JURUSAN_ID = B.PENDIDIKAN_JURUSAN_ID
					LEFT JOIN PENDIDIKAN C ON A.PENDIDIKAN_ID = C.PENDIDIKAN_ID
					WHERE 1 = 1
				) PEN_RIW ON SMP.PENDIDIKAN_RIWAYAT_AKHIR_ID = PEN_RIW.PENDIDIKAN_RIWAYAT_ID
				LEFT JOIN
				(
					SELECT 	
						A.PENDIDIKAN_RIWAYAT_ID, A.PENDIDIKAN_ID, C.NAMA PENDIDIKAN_NAMA
						, CASE A.STATUS_PENDIDIKAN
						WHEN '1' THEN 'Pendidikan CPNS'
						WHEN '2' THEN 'Diakui'
						WHEN '3' THEN 'Belum Diakui'
						WHEN '4' THEN 'Riwayat'
						WHEN '5' THEN 'Ijin belajar'
						WHEN '6' THEN 'Tugas Belajar'
						ELSE '-' END STATUS_PENDIDIKAN_NAMA, A.PENDIDIKAN_JURUSAN_ID, A.JURUSAN, A.NAMA NAMA_SEKOLAH, A.NAMA_FAKULTAS, A.TEMPAT
					FROM PENDIDIKAN_RIWAYAT A
					LEFT JOIN PENDIDIKAN_JURUSAN B ON A.PENDIDIKAN_JURUSAN_ID = B.PENDIDIKAN_JURUSAN_ID
					LEFT JOIN PENDIDIKAN C ON A.PENDIDIKAN_ID = C.PENDIDIKAN_ID
					WHERE 1 = 1
				) PEN_US_RIW ON SMP.PENDIDIKAN_RIWAYAT_SEKARANG_ID = PEN_US_RIW.PENDIDIKAN_RIWAYAT_ID
				LEFT JOIN SATUAN_KERJA SK ON SK.SATUAN_KERJA_ID = A.SATUAN_KERJA_ID
				LEFT JOIN
				(
					SELECT SMP.SURAT_MASUK_BKD_ID, SMP.JENIS_ID, COUNT(SMP.PEGAWAI_ID) JUMLAH_USULAN_PEGAWAI
					FROM persuratan.SURAT_MASUK_PEGAWAI SMP
					WHERE 1 = 1
					GROUP BY SMP.SURAT_MASUK_BKD_ID, SMP.JENIS_ID
				) PUS ON SMP.SURAT_MASUK_BKD_ID = PUS.SURAT_MASUK_BKD_ID
				LEFT JOIN
				(
					SELECT SMP.USULAN_SURAT_ID, SMP.JENIS_ID, COUNT(SMP.PEGAWAI_ID) JUMLAH_USULAN_KANREG_PEGAWAI
					FROM persuratan.SURAT_MASUK_PEGAWAI SMP
					WHERE 1 = 1
					GROUP BY SMP.USULAN_SURAT_ID, SMP.JENIS_ID
				) US ON SMP.USULAN_SURAT_ID = US.USULAN_SURAT_ID
				, (
				SELECT 
				TANDA_TANGAN_BKD_ID, MULAI_BERLAKU, AKHIR_BERLAKU, NO_NOMENKLATUR_KAB, 
				NO_NOMENKLATUR_BKD, NAMA, PLT_JABATAN, NAMA_PEJABAT, PANGKAT_ID, 
				KODE_PANGKAT, PANGKAT, NIP, PEJABAT_PENETAP
				FROM TANDA_TANGAN_BKD A
				WHERE 1 = 1
				AND A.TANDA_TANGAN_BKD_ID = (SELECT AMBIL_TANDA_TANGAN_BKD_TGL(CURRENT_DATE))
				) TTD1
				WHERE 1 = 1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		//echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
		
    }

	function selectByParamsSurat($paramsArray=array(),$limit=-1,$from=-1, $satuankerjaid="", $statementdisposisi="", $statement='',$order=' ORDER BY A.SURAT_MASUK_BKD_ID ASC')
	{
		//WHERE 1=1 AND ( SATUAN_KERJA_ASAL_ID = ".$satuankerjaid." OR ( SURAT_MASUK_BKD_DISPOSISI_PARENT_ID = 0 AND SATUAN_KERJA_TUJUAN_ID = ".$satuankerjaid." ))

		/*
		, persuratan.AMBIL_SATKER_POSISI_SURAT(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) POSISI_SURAT
		, 
		CASE WHEN persuratan.AMBIL_SATKER_POSISI_SURAT_BACA(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) IS NULL 
		THEN AMBIL_SATKER_NAMA(A.SATUAN_KERJA_TUJUAN_ID)
		ELSE persuratan.AMBIL_SATKER_POSISI_SURAT_BACA(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) END POSISI_SURAT_BACA
		, persuratan.AMBIL_SATKER_POSISI_SURAT_BACA(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) POSISI_SURAT_BACABAK
		, persuratan.AMBIL_SATKER_POSISI_ID_SURAT(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) POSISI_ID_SURAT
		,
		CASE WHEN PD.POSISI_TEKNIS = 1 THEN
			AMBIL_SATKER_NAMA(PD.SATUAN_KERJA_ASAL_ID)
		ELSE
			CASE WHEN A.JENIS_ID IS NULL THEN 
				CASE WHEN persuratan.AMBIL_SATKER_POSISI_SURAT_BACA(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) IS NULL 
				THEN AMBIL_SATKER_NAMA(A.SATUAN_KERJA_TUJUAN_ID)
				ELSE persuratan.AMBIL_SATKER_POSISI_SURAT_BACA(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) END
			ELSE PBKD.INFO_PROSES END
		END POSISI_TERAKHIR
		, 
		CASE WHEN A.JENIS_ID IS NULL THEN 
			CASE WHEN persuratan.AMBIL_SATKER_POSISI_SURAT_BACA(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) IS NULL 
			THEN AMBIL_SATKER_NAMA(A.SATUAN_KERJA_TUJUAN_ID)
			ELSE persuratan.AMBIL_SATKER_POSISI_SURAT_BACA(A.SURAT_MASUK_BKD_ID, A.JENIS_ID) END
		ELSE PBKD.INFO_PROSES END POSISI_TERAKHIRBAK1*/
		$str = "
			SELECT 
				A.SURAT_MASUK_BKD_ID, A.JENIS_ID, A.NOMOR, A.NO_AGENDA, A.TANGGAL, A.TANGGAL_DITERUSKAN, 
				A.TANGGAL_BATAS, A.KEPADA, A.PERIHAL
				, A.SATUAN_KERJA_ASAL_ID
				, CASE WHEN A.SATUAN_KERJA_ASAL_ID IS NULL THEN A.SATUAN_KERJA_ASAL_NAMA ELSE AMBIL_SATKER_NAMA(A.SATUAN_KERJA_ASAL_ID) END SATUAN_KERJA_ASAL_NAMA
				, A.SATUAN_KERJA_TUJUAN_ID, AMBIL_SATKER_NAMA(A.SATUAN_KERJA_TUJUAN_ID) SATUAN_KERJA_TUJUAN_NAMA
				, ID_POSISI_SURAT POSISI_SURAT
				, 
				CASE WHEN ID_POSISI_SURAT_BACA IS NULL 
				THEN AMBIL_SATKER_NAMA(A.SATUAN_KERJA_TUJUAN_ID)
				ELSE ID_POSISI_SURAT_BACA END POSISI_SURAT_BACA
				, POSISI_ID_SURAT POSISI_ID_SURAT
				,
				CASE WHEN PD.POSISI_TEKNIS = 1 THEN
					AMBIL_SATKER_NAMA(PD.SATUAN_KERJA_ASAL_ID)
				ELSE
					CASE WHEN A.JENIS_ID IS NULL THEN 
						CASE WHEN ID_POSISI_SURAT_BACA IS NULL 
						THEN AMBIL_SATKER_NAMA(A.SATUAN_KERJA_TUJUAN_ID)
						ELSE ID_POSISI_SURAT_BACA END
					ELSE PBKD.INFO_PROSES END
				END POSISI_TERAKHIR
				, JUMLAH_DISPOSISI, TT.TANGGAL_TERIMA
			FROM persuratan.SURAT_MASUK_BKD A
			INNER JOIN
			(
				SELECT SURAT_MASUK_BKD_ID
				FROM persuratan.SURAT_MASUK_BKD_DISPOSISI
				WHERE 1=1 AND SATUAN_KERJA_ASAL_ID = ".$satuankerjaid."
				".$statementdisposisi."
				GROUP BY SURAT_MASUK_BKD_ID
			) B ON A.SURAT_MASUK_BKD_ID = B.SURAT_MASUK_BKD_ID
			LEFT JOIN ( 
				SELECT *
				FROM
				(
					SELECT SURAT_MASUK_BKD_DISPOSISI_ID POSISI_ID_SURAT, SURAT_MASUK_BKD_ID, ID_POSISI_SURAT, ID_POSISI_SURAT_BACA
					FROM persuratan.SURAT_MASUK_BKD_DISPOSISI_POSISI A
				) A
				INNER JOIN 
				(
					SELECT SURAT_MASUK_BKD_ID SURAT_MASUK_BKD_ID_ALIAS, SURAT_MASUK_BKD_DISPOSISI_ID, SATUAN_KERJA_ASAL_ID, POSISI_TEKNIS
					FROM persuratan.SURAT_MASUK_BKD_DISPOSISI
				) B ON POSISI_ID_SURAT = SURAT_MASUK_BKD_DISPOSISI_ID
				LEFT JOIN
				(
					SELECT MAX(STATUS_DISPOSISI) STATUS_DISPOSISI, SURAT_MASUK_BKD_STATUS_ID
					FROM
					(
						SELECT
						CASE
						WHEN TERBACA IS NULL THEN 1
						WHEN TERBACA IS NOT NULL AND TERDISPOSISI IS NULL AND TERBACA_SATUAN_KERJA_CHILD IS NULL THEN 2
						WHEN TERBACA IS NOT NULL AND TERDISPOSISI IS NOT NULL AND TERBACA_SATUAN_KERJA_CHILD IS NULL THEN 3
						ELSE 4
						END STATUS_DISPOSISI
						, A.SURAT_MASUK_BKD_ID SURAT_MASUK_BKD_STATUS_ID
						FROM persuratan.SURAT_MASUK_BKD_DISPOSISI A
						LEFT JOIN
						(
							SELECT A.SURAT_MASUK_BKD_DISPOSISI_ID, A.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID, CASE WHEN JUMLAH_DISPOSISI > 0 THEN 1 ELSE 0 END JUMLAH_DISPOSISI
							, B.TERBACA TERBACA_SATUAN_KERJA_CHILD, B.TERDISPOSISI TERDISPOSISI_SATUAN_KERJA_CHILD
							FROM
							(
								SELECT MAX(A.SURAT_MASUK_BKD_DISPOSISI_ID) SURAT_MASUK_BKD_DISPOSISI_ID, A.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID, COUNT(1) JUMLAH_DISPOSISI 
								FROM persuratan.SURAT_MASUK_BKD_DISPOSISI A
								GROUP BY A.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID
							) A
							LEFT JOIN persuratan.SURAT_MASUK_BKD_DISPOSISI B ON A.SURAT_MASUK_BKD_DISPOSISI_ID = B.SURAT_MASUK_BKD_DISPOSISI_ID
						) B ON A.SURAT_MASUK_BKD_DISPOSISI_ID = B.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID
						WHERE A.SATUAN_KERJA_ASAL_ID = ".$satuankerjaid."
					) A
					GROUP BY A.SURAT_MASUK_BKD_STATUS_ID
				) C ON A.SURAT_MASUK_BKD_ID = C.SURAT_MASUK_BKD_STATUS_ID
			) PD ON PD.SURAT_MASUK_BKD_ID = A.SURAT_MASUK_BKD_ID
			LEFT JOIN 
			(
				SELECT
				A.JENIS_ID, A.SURAT_MASUK_BKD_ID
				, A.SATUAN_KERJA_ID, A.LAST_USER, A.LAST_DATE
				, CONCAT(A.INFO_LOG, ' ', ambil_satker_nama(A.SATUAN_KERJA_ID)) INFO_PROSES
				FROM persuratan.SURAT_MASUK_PEGAWAI_LOG A
				INNER JOIN
				(
					SELECT SURAT_MASUK_BKD_ID, JENIS_ID, MAX(LAST_DATE) LAST_DATE
					FROM persuratan.SURAT_MASUK_PEGAWAI_LOG
					WHERE SURAT_MASUK_BKD_ID IS NOT NULL
					GROUP BY SURAT_MASUK_BKD_ID, JENIS_ID
				) B ON A.JENIS_ID = B.JENIS_ID AND A.SURAT_MASUK_BKD_ID = B.SURAT_MASUK_BKD_ID AND A.LAST_DATE = B.LAST_DATE
				GROUP BY A.JENIS_ID, A.SURAT_MASUK_BKD_ID
				, A.SATUAN_KERJA_ID, A.LAST_USER, A.LAST_DATE
				, CONCAT(A.INFO_LOG, ' ', ambil_satker_nama(A.SATUAN_KERJA_ID))
			) PBKD ON A.JENIS_ID = PBKD.JENIS_ID AND A.SURAT_MASUK_BKD_ID = PBKD.SURAT_MASUK_BKD_ID
			LEFT JOIN
			(
				SELECT A.SURAT_MASUK_BKD_ID, COUNT(1) JUMLAH_DISPOSISI FROM persuratan.SURAT_MASUK_BKD_DISPOSISI A
				WHERE 1=1 AND TERDISPOSISI = 1
				GROUP BY SURAT_MASUK_BKD_ID
			) JML ON A.SURAT_MASUK_BKD_ID = JML.SURAT_MASUK_BKD_ID
			LEFT JOIN
			(
				SELECT A.SURAT_MASUK_BKD_ID, TANGGAL TANGGAL_TERIMA
				FROM persuratan.SURAT_MASUK_BKD_DISPOSISI A
				WHERE 1=1
				AND EXISTS
				(
				SELECT 1
				FROM persuratan.SURAT_MASUK_BKD_DISPOSISI X
				WHERE X.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID = 0
				AND X.SURAT_MASUK_BKD_DISPOSISI_ID = A.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID
				)
			) TT ON A.SURAT_MASUK_BKD_ID = TT.SURAT_MASUK_BKD_ID
			WHERE 1=1
		"; 
		
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		
		$str .= $statement." ".$order;
		$this->query = $str;
		// echo $str;exit;
		return $this->selectLimit($str,$limit,$from); 
    }

    function getCountByParamsSurat($paramsArray=array(), $satuankerjaid="", $jenisid="", $statement='')
	{
		//WHERE 1=1 AND ( SATUAN_KERJA_ASAL_ID = ".$satuankerjaid." OR ( SURAT_MASUK_BKD_DISPOSISI_PARENT_ID = 0 AND SATUAN_KERJA_TUJUAN_ID = ".$satuankerjaid." ))
		$str = "
				SELECT COUNT(1) AS ROWCOUNT 
				FROM persuratan.SURAT_MASUK_BKD A
				INNER JOIN
				(
					SELECT SURAT_MASUK_BKD_ID
					FROM persuratan.SURAT_MASUK_BKD_DISPOSISI
					WHERE 1=1 AND SATUAN_KERJA_ASAL_ID = ".$satuankerjaid."
					".$statementdisposisi."
					GROUP BY SURAT_MASUK_BKD_ID
				) B ON A.SURAT_MASUK_BKD_ID = B.SURAT_MASUK_BKD_ID
				LEFT JOIN ( 
					SELECT *
					FROM
					(
						SELECT SURAT_MASUK_BKD_DISPOSISI_ID POSISI_ID_SURAT, SURAT_MASUK_BKD_ID, ID_POSISI_SURAT, ID_POSISI_SURAT_BACA
						FROM persuratan.SURAT_MASUK_BKD_DISPOSISI_POSISI A
					) A
					INNER JOIN 
					(
						SELECT SURAT_MASUK_BKD_ID SURAT_MASUK_BKD_ID_ALIAS, SURAT_MASUK_BKD_DISPOSISI_ID, SATUAN_KERJA_ASAL_ID, POSISI_TEKNIS
						FROM persuratan.SURAT_MASUK_BKD_DISPOSISI
					) B ON POSISI_ID_SURAT = SURAT_MASUK_BKD_DISPOSISI_ID
					LEFT JOIN
					(
						SELECT MAX(STATUS_DISPOSISI) STATUS_DISPOSISI, SURAT_MASUK_BKD_STATUS_ID
						FROM
						(
							SELECT
							CASE
							WHEN TERBACA IS NULL THEN 1
							WHEN TERBACA IS NOT NULL AND TERDISPOSISI IS NULL AND TERBACA_SATUAN_KERJA_CHILD IS NULL THEN 2
							WHEN TERBACA IS NOT NULL AND TERDISPOSISI IS NOT NULL AND TERBACA_SATUAN_KERJA_CHILD IS NULL THEN 3
							ELSE 4
							END STATUS_DISPOSISI
							, A.SURAT_MASUK_BKD_ID SURAT_MASUK_BKD_STATUS_ID
							FROM persuratan.SURAT_MASUK_BKD_DISPOSISI A
							LEFT JOIN
							(
								SELECT A.SURAT_MASUK_BKD_DISPOSISI_ID, A.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID, CASE WHEN JUMLAH_DISPOSISI > 0 THEN 1 ELSE 0 END JUMLAH_DISPOSISI
								, B.TERBACA TERBACA_SATUAN_KERJA_CHILD, B.TERDISPOSISI TERDISPOSISI_SATUAN_KERJA_CHILD
								FROM
								(
									SELECT MAX(A.SURAT_MASUK_BKD_DISPOSISI_ID) SURAT_MASUK_BKD_DISPOSISI_ID, A.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID, COUNT(1) JUMLAH_DISPOSISI 
									FROM persuratan.SURAT_MASUK_BKD_DISPOSISI A
									GROUP BY A.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID
								) A
								LEFT JOIN persuratan.SURAT_MASUK_BKD_DISPOSISI B ON A.SURAT_MASUK_BKD_DISPOSISI_ID = B.SURAT_MASUK_BKD_DISPOSISI_ID
							) B ON A.SURAT_MASUK_BKD_DISPOSISI_ID = B.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID
							WHERE A.SATUAN_KERJA_ASAL_ID = ".$satuankerjaid."
						) A
						GROUP BY A.SURAT_MASUK_BKD_STATUS_ID
					) C ON A.SURAT_MASUK_BKD_ID = C.SURAT_MASUK_BKD_STATUS_ID
				) PD ON PD.SURAT_MASUK_BKD_ID = A.SURAT_MASUK_BKD_ID
				LEFT JOIN
				(
					SELECT A.SURAT_MASUK_BKD_ID, TANGGAL TANGGAL_TERIMA
					FROM persuratan.SURAT_MASUK_BKD_DISPOSISI A
					WHERE 1=1
					AND EXISTS
					(
					SELECT 1
					FROM persuratan.SURAT_MASUK_BKD_DISPOSISI X
					WHERE X.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID = 0
					AND X.SURAT_MASUK_BKD_DISPOSISI_ID = A.SURAT_MASUK_BKD_DISPOSISI_PARENT_ID
					)
				) TT ON A.SURAT_MASUK_BKD_ID = TT.SURAT_MASUK_BKD_ID
				WHERE 1 = 1 ".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		// echo $str;exit();
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

	function getCountByParamsCetakPengantarSatuOrang($paramsArray=array(), $statement='')
	{
		$str = "
				SELECT COUNT(1) AS ROWCOUNT 
				FROM PEGAWAI A
				INNER JOIN persuratan.SURAT_MASUK_PEGAWAI SMP ON A.PEGAWAI_ID = SMP.PEGAWAI_ID
				INNER JOIN persuratan.SURAT_MASUK_BKD SMU ON SMU.SURAT_MASUK_BKD_ID = SMP.SURAT_MASUK_BKD_ID
				LEFT JOIN persuratan.SURAT_KELUAR_BKD SKU ON SKU.SURAT_MASUK_PEGAWAI_ID = SMP.SURAT_MASUK_PEGAWAI_ID
				LEFT JOIN persuratan.KLASIFIKASI B ON SKU.KLASIFIKASI_ID = B.KLASIFIKASI_ID
				LEFT JOIN TANDA_TANGAN_BKD TTD ON SKU.TANDA_TANGAN_BKD_ID = TTD.TANDA_TANGAN_BKD_ID
				LEFT JOIN
				(
					SELECT A.PANGKAT_RIWAYAT_ID, B.KODE, A.TMT_PANGKAT, B.NAMA
					FROM PANGKAT_RIWAYAT A
					LEFT JOIN PANGKAT B ON A.PANGKAT_ID = B.PANGKAT_ID
				) PANG_RIW ON A.PANGKAT_RIWAYAT_ID = PANG_RIW.PANGKAT_RIWAYAT_ID
				LEFT JOIN
				(
					SELECT A.JABATAN_RIWAYAT_ID, B.NAMA ESELON_NAMA, A.TMT_JABATAN, A.NAMA JABATAN_NAMA
					FROM JABATAN_RIWAYAT A
					LEFT JOIN ESELON B ON A.ESELON_ID = B.ESELON_ID
				) JAB_RIW ON A.JABATAN_RIWAYAT_ID = JAB_RIW.JABATAN_RIWAYAT_ID
				LEFT JOIN
				(
					SELECT SURAT_MASUK_KARPEG_ID, JENIS_ID, JENIS_KARPEG, SURAT_MASUK_BKD_ID, SURAT_MASUK_UPT_ID, 
						PEGAWAI_ID, NO_SURAT_KEHILANGAN, TANGGAL_SURAT_KEHILANGAN, KETERANGAN
					FROM persuratan.SURAT_MASUK_KARPEG A
				) KPG_RIW ON SMP.SURAT_MASUK_KARPEG_ID = KPG_RIW.SURAT_MASUK_KARPEG_ID
				LEFT JOIN
				(
					SELECT 	
						A.PENDIDIKAN_RIWAYAT_ID, A.PENDIDIKAN_ID, C.NAMA PENDIDIKAN_NAMA
						, CASE A.STATUS_PENDIDIKAN
						WHEN '1' THEN 'Pendidikan CPNS'
						WHEN '2' THEN 'Diakui'
						WHEN '3' THEN 'Belum Diakui'
						WHEN '4' THEN 'Riwayat'
						WHEN '5' THEN 'Ijin belajar'
						WHEN '6' THEN 'Tugas Belajar'
						ELSE '-' END STATUS_PENDIDIKAN_NAMA, A.PENDIDIKAN_JURUSAN_ID, A.JURUSAN, A.NAMA NAMA_SEKOLAH
					FROM PENDIDIKAN_RIWAYAT A
					LEFT JOIN PENDIDIKAN_JURUSAN B ON A.PENDIDIKAN_JURUSAN_ID = B.PENDIDIKAN_JURUSAN_ID
					LEFT JOIN PENDIDIKAN C ON A.PENDIDIKAN_ID = C.PENDIDIKAN_ID
					WHERE 1 = 1
				) PEN_RIW ON SMP.PENDIDIKAN_RIWAYAT_AKHIR_ID = PEN_RIW.PENDIDIKAN_RIWAYAT_ID
				LEFT JOIN
				(
					SELECT 	
						A.PENDIDIKAN_RIWAYAT_ID, A.PENDIDIKAN_ID, C.NAMA PENDIDIKAN_NAMA
						, CASE A.STATUS_PENDIDIKAN
						WHEN '1' THEN 'Pendidikan CPNS'
						WHEN '2' THEN 'Diakui'
						WHEN '3' THEN 'Belum Diakui'
						WHEN '4' THEN 'Riwayat'
						WHEN '5' THEN 'Ijin belajar'
						WHEN '6' THEN 'Tugas Belajar'
						ELSE '-' END STATUS_PENDIDIKAN_NAMA, A.PENDIDIKAN_JURUSAN_ID, A.JURUSAN, A.NAMA NAMA_SEKOLAH, A.NAMA_FAKULTAS, A.TEMPAT
					FROM PENDIDIKAN_RIWAYAT A
					LEFT JOIN PENDIDIKAN_JURUSAN B ON A.PENDIDIKAN_JURUSAN_ID = B.PENDIDIKAN_JURUSAN_ID
					LEFT JOIN PENDIDIKAN C ON A.PENDIDIKAN_ID = C.PENDIDIKAN_ID
					WHERE 1 = 1
				) PEN_US_RIW ON SMP.PENDIDIKAN_RIWAYAT_SEKARANG_ID = PEN_US_RIW.PENDIDIKAN_RIWAYAT_ID
				LEFT JOIN SATUAN_KERJA SK ON SK.SATUAN_KERJA_ID = A.SATUAN_KERJA_ID
				LEFT JOIN
				(
					SELECT SMP.SURAT_MASUK_BKD_ID, SMP.JENIS_ID, COUNT(SMP.PEGAWAI_ID) JUMLAH_USULAN_PEGAWAI
					FROM persuratan.SURAT_MASUK_PEGAWAI SMP
					WHERE 1 = 1
					GROUP BY SMP.SURAT_MASUK_BKD_ID, SMP.JENIS_ID
				) PUS ON SMP.SURAT_MASUK_BKD_ID = PUS.SURAT_MASUK_BKD_ID
				, (
				SELECT 
				TANDA_TANGAN_BKD_ID, MULAI_BERLAKU, AKHIR_BERLAKU, NO_NOMENKLATUR_KAB, 
				NO_NOMENKLATUR_BKD, NAMA, PLT_JABATAN, NAMA_PEJABAT, PANGKAT_ID, 
				KODE_PANGKAT, PANGKAT, NIP, PEJABAT_PENETAP
				FROM TANDA_TANGAN_BKD A
				WHERE 1 = 1
				AND A.TANDA_TANGAN_BKD_ID = (SELECT AMBIL_TANDA_TANGAN_BKD_TGL(CURRENT_DATE))
				) TTD1
				WHERE 1 = 1 ".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

	function getCountByParams($paramsArray=array(), $statement='')
	{
		$str = "
				SELECT COUNT(1) AS ROWCOUNT 
				FROM persuratan.SURAT_MASUK_BKD A
				LEFT JOIN SATUAN_KERJA B ON A.SATUAN_KERJA_ASAL_ID = B.SATUAN_KERJA_ID
				LEFT JOIN SATUAN_KERJA C ON A.SATUAN_KERJA_TUJUAN_ID = C.SATUAN_KERJA_ID
				LEFT JOIN persuratan.TOTAL_PEGAWAI_BKD TPU ON A.SURAT_MASUK_BKD_ID = TPU.SURAT_MASUK_BKD_ID
				LEFT JOIN persuratan.TOTAL_PEGAWAI_PROGRES_BKD TPPU ON A.SURAT_MASUK_BKD_ID = TPPU.SURAT_MASUK_BKD_ID
				LEFT JOIN persuratan.TOTAL_PEGAWAI_KEMBALI_BKD TPKU ON A.SURAT_MASUK_BKD_ID = TPKU.SURAT_MASUK_BKD_ID
				WHERE 1 = 1 ".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }
	
	function getCountByParamsSatuanKerjaIdSurat($paramsArray=array(), $statement='')
	{
		$str = "
				SELECT SATUAN_KERJA_ID AS ROWCOUNT 
				FROM SATUAN_KERJA A
				WHERE 1 = 1 AND A.STATUS_KELOMPOK_PEGAWAI_USUL = 1 AND SATUAN_KERJA_PARENT_ID = 0 ".$statement; 
		foreach ($paramsArray as $key => $val)
		{
			$str .= " AND $key = '$val' ";
		}
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

    function getCountByParamsJenisPelayananSatuanKerjaId($reqJenis="", $statement='')
	{
		$str = "
				SELECT SATUAN_KERJA_ID AS ROWCOUNT 
				FROM persuratan.JENIS_PELAYANAN A
				WHERE 1 = 1 AND A.JENIS_PELAYANAN_ID = ".$reqJenis.$statement; 
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

    function getCountByParamsNomorAwal($statement='')
	{
		$str = "
			SELECT
				COALESCE(MAX(CAST(COALESCE(NULLIF(A.NO_AGENDA, ''), NULL) AS NUMERIC)) + 1, 1) AS ROWCOUNT 
			FROM persuratan.SURAT_MASUK_BKD A 
			WHERE 1=1
			".$statement; 
			
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }

    function getCountByParamsTanggalPerTahun($statement='')
	{
		$str = "
			SELECT
				MAX(TANGGAL) AS ROWCOUNT 
			FROM persuratan.SURAT_MASUK_BKD A 
			WHERE 1=1
			".$statement; 
			
		$this->query = $str;
		$this->select($str); 
		if($this->firstRow()) 
			return $this->getField("ROWCOUNT"); 
		else 
			return 0;  
    }
	
  } 
?>